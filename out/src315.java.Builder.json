{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "file", "name": "src315.java", "nullable": false, "actual_type": null}, "id": "src315.java"}, {"attr": {"type": "class", "name": "PrologOptions", "nullable": false, "actual_type": null}, "id": "src315.java.PrologOptions"}, {"attr": {"type": "method", "name": "defaultOptions", "nullable": false, "actual_type": null}, "id": "src315.java.PrologOptions.defaultOptions()"}, {"attr": {"type": "method", "name": "dryRunOptions", "nullable": false, "actual_type": null}, "id": "src315.java.PrologOptions.dryRunOptions()"}, {"attr": {"type": "parameter", "name": "ruleToTest", "nullable": false, "actual_type": "String"}, "id": "src315.java.PrologOptions.dryRunOptions().ruleToTest"}, {"attr": {"type": "parameter", "name": "skipFilters", "nullable": false, "actual_type": "boolean"}, "id": "src315.java.PrologOptions.dryRunOptions().skipFilters"}, {"attr": {"type": "method", "name": "logErrors", "nullable": false, "actual_type": null}, "id": "src315.java.PrologOptions.logErrors()"}, {"attr": {"type": "method", "name": "skipFilters", "nullable": false, "actual_type": null}, "id": "src315.java.PrologOptions.skipFilters()"}, {"attr": {"type": "method", "name": "rule", "nullable": false, "actual_type": null}, "id": "src315.java.PrologOptions.rule()"}, {"attr": {"type": "field", "name": "logger", "nullable": false, "actual_type": null}, "id": "src315.java.PrologOptions.logger"}, {"attr": {"type": "class", "name": "Builder", "nullable": false, "actual_type": null}, "id": "src315.java.Builder"}, {"attr": {"type": "method", "name": "logErrors", "nullable": false, "actual_type": null}, "id": "src315.java.Builder.logErrors()"}, {"attr": {"type": "parameter", "name": "logErrors", "nullable": false, "actual_type": "boolean"}, "id": "src315.java.Builder.logErrors().logErrors"}, {"attr": {"type": "method", "name": "skipFilters", "nullable": false, "actual_type": null}, "id": "src315.java.Builder.skipFilters()"}, {"attr": {"type": "parameter", "name": "skipFilters", "nullable": false, "actual_type": "boolean"}, "id": "src315.java.Builder.skipFilters().skipFilters"}, {"attr": {"type": "method", "name": "rule", "nullable": false, "actual_type": null}, "id": "src315.java.Builder.rule()"}, {"attr": {"type": "parameter", "name": "rule", "nullable": true, "actual_type": "String"}, "id": "src315.java.Builder.rule().rule"}, {"attr": {"type": "method", "name": "build", "nullable": false, "actual_type": null}, "id": "src315.java.Builder.build()"}], "links": [{"type": "contains", "source": "src315.java", "target": "src315.java.PrologOptions"}, {"type": "contains", "source": "src315.java", "target": "src315.java.Builder"}, {"type": "contains", "source": "src315.java.PrologOptions", "target": "src315.java.PrologOptions.defaultOptions()"}, {"type": "contains", "source": "src315.java.PrologOptions", "target": "src315.java.PrologOptions.dryRunOptions()"}, {"type": "contains", "source": "src315.java.PrologOptions", "target": "src315.java.PrologOptions.logErrors()"}, {"type": "contains", "source": "src315.java.PrologOptions", "target": "src315.java.PrologOptions.skipFilters()"}, {"type": "contains", "source": "src315.java.PrologOptions", "target": "src315.java.PrologOptions.rule()"}, {"type": "has_field", "source": "src315.java.PrologOptions", "target": "src315.java.PrologOptions.logger"}, {"type": "has_parameter", "source": "src315.java.PrologOptions.dryRunOptions()", "target": "src315.java.PrologOptions.dryRunOptions().ruleToTest"}, {"type": "has_parameter", "source": "src315.java.PrologOptions.dryRunOptions()", "target": "src315.java.PrologOptions.dryRunOptions().skipFilters"}, {"type": "contains", "source": "src315.java.Builder", "target": "src315.java.Builder.logErrors()"}, {"type": "contains", "source": "src315.java.Builder", "target": "src315.java.Builder.skipFilters()"}, {"type": "contains", "source": "src315.java.Builder", "target": "src315.java.Builder.rule()"}, {"type": "contains", "source": "src315.java.Builder", "target": "src315.java.Builder.build()"}, {"type": "has_parameter", "source": "src315.java.Builder.logErrors()", "target": "src315.java.Builder.logErrors().logErrors"}, {"type": "has_parameter", "source": "src315.java.Builder.skipFilters()", "target": "src315.java.Builder.skipFilters().skipFilters"}, {"type": "has_parameter", "source": "src315.java.Builder.rule()", "target": "src315.java.Builder.rule().rule"}]}