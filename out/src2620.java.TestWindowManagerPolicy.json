{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "file", "name": "src2620.java", "nullable": false, "actual_type": null}, "id": "src2620.java"}, {"attr": {"type": "class", "name": "TestWindowManagerPolicy", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy"}, {"attr": {"type": "method", "name": "registerShortcutKey", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.registerShortcutKey()"}, {"attr": {"type": "parameter", "name": "shortcutCode", "nullable": false, "actual_type": "long"}, "id": "src2620.java.TestWindowManagerPolicy.registerShortcutKey().shortcutCode"}, {"attr": {"type": "parameter", "name": "shortcutKeyReceiver", "nullable": false, "actual_type": "IShortcutService"}, "id": "src2620.java.TestWindowManagerPolicy.registerShortcutKey().shortcutKeyReceiver"}, {"attr": {"type": "method", "name": "init", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.init()"}, {"attr": {"type": "parameter", "name": "context", "nullable": false, "actual_type": "Context"}, "id": "src2620.java.TestWindowManagerPolicy.init().context"}, {"attr": {"type": "parameter", "name": "windowManagerFuncs", "nullable": false, "actual_type": "WindowManagerFuncs"}, "id": "src2620.java.TestWindowManagerPolicy.init().windowManagerFuncs"}, {"attr": {"type": "method", "name": "setDefaultDisplay", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setDefaultDisplay()"}, {"attr": {"type": "parameter", "name": "displayContentInfo", "nullable": false, "actual_type": "DisplayContentInfo"}, "id": "src2620.java.TestWindowManagerPolicy.setDefaultDisplay().displayContentInfo"}, {"attr": {"type": "method", "name": "checkAddPermission", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.checkAddPermission()"}, {"attr": {"type": "parameter", "name": "type", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.checkAddPermission().type"}, {"attr": {"type": "parameter", "name": "isRoundedCornerOverlay", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.checkAddPermission().isRoundedCornerOverlay"}, {"attr": {"type": "parameter", "name": "packageName", "nullable": false, "actual_type": "String"}, "id": "src2620.java.TestWindowManagerPolicy.checkAddPermission().packageName"}, {"attr": {"type": "parameter", "name": "outAppOp", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.checkAddPermission().outAppOp"}, {"attr": {"type": "method", "name": "adjustConfigurationLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw()"}, {"attr": {"type": "parameter", "name": "config", "nullable": false, "actual_type": "Configuration"}, "id": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw().config"}, {"attr": {"type": "parameter", "name": "keyboardPresence", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw().keyboardPresence"}, {"attr": {"type": "parameter", "name": "navigationPresence", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw().navigationPresence"}, {"attr": {"type": "method", "name": "isKeyguardHostWindow", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardHostWindow()"}, {"attr": {"type": "parameter", "name": "attrs", "nullable": false, "actual_type": "WindowManager"}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardHostWindow().attrs"}, {"attr": {"type": "method", "name": "createHiddenByKeyguardExit", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit()"}, {"attr": {"type": "parameter", "name": "onWallpaper", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit().onWallpaper"}, {"attr": {"type": "parameter", "name": "goingToNotificationShade", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit().goingToNotificationShade"}, {"attr": {"type": "parameter", "name": "subtleAnimation", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit().subtleAnimation"}, {"attr": {"type": "method", "name": "createKeyguardWallpaperExit", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.createKeyguardWallpaperExit()"}, {"attr": {"type": "parameter", "name": "goingToNotificationShade", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.createKeyguardWallpaperExit().goingToNotificationShade"}, {"attr": {"type": "method", "name": "interceptKeyBeforeQueueing", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeQueueing()"}, {"attr": {"type": "parameter", "name": "event", "nullable": false, "actual_type": "KeyEvent"}, "id": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeQueueing().event"}, {"attr": {"type": "parameter", "name": "policyFlags", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeQueueing().policyFlags"}, {"attr": {"type": "method", "name": "interceptMotionBeforeQueueingNonInteractive", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive()"}, {"attr": {"type": "parameter", "name": "displayId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive().displayId"}, {"attr": {"type": "parameter", "name": "whenNanos", "nullable": false, "actual_type": "long"}, "id": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive().whenNanos"}, {"attr": {"type": "parameter", "name": "policyFlags", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive().policyFlags"}, {"attr": {"type": "method", "name": "interceptKeyBeforeDispatching", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching()"}, {"attr": {"type": "parameter", "name": "focusedToken", "nullable": false, "actual_type": "IBinder"}, "id": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching().focusedToken"}, {"attr": {"type": "parameter", "name": "event", "nullable": false, "actual_type": "KeyEvent"}, "id": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching().event"}, {"attr": {"type": "parameter", "name": "policyFlags", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching().policyFlags"}, {"attr": {"type": "method", "name": "dispatchUnhandledKey", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey()"}, {"attr": {"type": "parameter", "name": "focusedToken", "nullable": false, "actual_type": "IBinder"}, "id": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey().focusedToken"}, {"attr": {"type": "parameter", "name": "event", "nullable": false, "actual_type": "KeyEvent"}, "id": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey().event"}, {"attr": {"type": "parameter", "name": "policyFlags", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey().policyFlags"}, {"attr": {"type": "method", "name": "setTopFocusedDisplay", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setTopFocusedDisplay()"}, {"attr": {"type": "parameter", "name": "displayId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.setTopFocusedDisplay().displayId"}, {"attr": {"type": "method", "name": "setAllowLockscreenWhenOn", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setAllowLockscreenWhenOn()"}, {"attr": {"type": "parameter", "name": "displayId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.setAllowLockscreenWhenOn().displayId"}, {"attr": {"type": "parameter", "name": "allow", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.setAllowLockscreenWhenOn().allow"}, {"attr": {"type": "method", "name": "startedWakingUp", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.startedWakingUp()"}, {"attr": {"type": "parameter", "name": "wakeReason", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.startedWakingUp().wakeReason"}, {"attr": {"type": "method", "name": "finishedWakingUp", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.finishedWakingUp()"}, {"attr": {"type": "parameter", "name": "wakeReason", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.finishedWakingUp().wakeReason"}, {"attr": {"type": "method", "name": "startedGoingToSleep", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.startedGoingToSleep()"}, {"attr": {"type": "parameter", "name": "sleepReason", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.startedGoingToSleep().sleepReason"}, {"attr": {"type": "method", "name": "finishedGoingToSleep", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.finishedGoingToSleep()"}, {"attr": {"type": "parameter", "name": "sleepReason", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.finishedGoingToSleep().sleepReason"}, {"attr": {"type": "method", "name": "onPowerGroupWakefulnessChanged", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged()"}, {"attr": {"type": "parameter", "name": "groupId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged().groupId"}, {"attr": {"type": "parameter", "name": "wakefulness", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged().wakefulness"}, {"attr": {"type": "parameter", "name": "pmSleepReason", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged().pmSleepReason"}, {"attr": {"type": "parameter", "name": "globalWakefulness", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged().globalWakefulness"}, {"attr": {"type": "method", "name": "screenTurningOn", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.screenTurningOn()"}, {"attr": {"type": "parameter", "name": "displayId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.screenTurningOn().displayId"}, {"attr": {"type": "parameter", "name": "screenOnListener", "nullable": false, "actual_type": "ScreenOnListener"}, "id": "src2620.java.TestWindowManagerPolicy.screenTurningOn().screenOnListener"}, {"attr": {"type": "method", "name": "screenTurnedOn", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.screenTurnedOn()"}, {"attr": {"type": "parameter", "name": "displayId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.screenTurnedOn().displayId"}, {"attr": {"type": "method", "name": "screenTurningOff", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.screenTurningOff()"}, {"attr": {"type": "parameter", "name": "displayId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.screenTurningOff().displayId"}, {"attr": {"type": "parameter", "name": "screenOffListener", "nullable": false, "actual_type": "ScreenOffListener"}, "id": "src2620.java.TestWindowManagerPolicy.screenTurningOff().screenOffListener"}, {"attr": {"type": "method", "name": "screenTurnedOff", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.screenTurnedOff()"}, {"attr": {"type": "parameter", "name": "displayId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.screenTurnedOff().displayId"}, {"attr": {"type": "method", "name": "isScreenOn", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isScreenOn()"}, {"attr": {"type": "method", "name": "okToAnimate", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.okToAnimate()"}, {"attr": {"type": "parameter", "name": "ignoreScreenOn", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.okToAnimate().ignoreScreenOn"}, {"attr": {"type": "method", "name": "notifyLidSwitchChanged", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.notifyLidSwitchChanged()"}, {"attr": {"type": "parameter", "name": "whenNanos", "nullable": false, "actual_type": "long"}, "id": "src2620.java.TestWindowManagerPolicy.notifyLidSwitchChanged().whenNanos"}, {"attr": {"type": "parameter", "name": "lidOpen", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.notifyLidSwitchChanged().lidOpen"}, {"attr": {"type": "method", "name": "notifyCameraLensCoverSwitchChanged", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.notifyCameraLensCoverSwitchChanged()"}, {"attr": {"type": "parameter", "name": "whenNanos", "nullable": false, "actual_type": "long"}, "id": "src2620.java.TestWindowManagerPolicy.notifyCameraLensCoverSwitchChanged().whenNanos"}, {"attr": {"type": "parameter", "name": "lensCovered", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.notifyCameraLensCoverSwitchChanged().lensCovered"}, {"attr": {"type": "method", "name": "enableKeyguard", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.enableKeyguard()"}, {"attr": {"type": "parameter", "name": "enabled", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.enableKeyguard().enabled"}, {"attr": {"type": "method", "name": "exitKeyguardSecurely", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.exitKeyguardSecurely()"}, {"attr": {"type": "parameter", "name": "callback", "nullable": false, "actual_type": "OnKeyguardExitResult"}, "id": "src2620.java.TestWindowManagerPolicy.exitKeyguardSecurely().callback"}, {"attr": {"type": "method", "name": "isKeyguardLocked", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardLocked()"}, {"attr": {"type": "method", "name": "isKeyguardSecure", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardSecure()"}, {"attr": {"type": "parameter", "name": "userId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardSecure().userId"}, {"attr": {"type": "method", "name": "isKeyguardOccluded", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardOccluded()"}, {"attr": {"type": "method", "name": "isKeyguardTrustedLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardTrustedLw()"}, {"attr": {"type": "method", "name": "isKeyguardShowing", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardShowing()"}, {"attr": {"type": "method", "name": "isKeyguardShowingAndNotOccluded", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardShowingAndNotOccluded()"}, {"attr": {"type": "method", "name": "inKeyguardRestrictedKeyInputMode", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.inKeyguardRestrictedKeyInputMode()"}, {"attr": {"type": "method", "name": "dismissKeyguardLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.dismissKeyguardLw()"}, {"attr": {"type": "parameter", "name": "callback", "nullable": true, "actual_type": "IKeyguardDismissCallback"}, "id": "src2620.java.TestWindowManagerPolicy.dismissKeyguardLw().callback"}, {"attr": {"type": "parameter", "name": "message", "nullable": false, "actual_type": "CharSequence"}, "id": "src2620.java.TestWindowManagerPolicy.dismissKeyguardLw().message"}, {"attr": {"type": "method", "name": "isKeyguardDrawnLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isKeyguardDrawnLw()"}, {"attr": {"type": "method", "name": "onKeyguardOccludedChangedLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.onKeyguardOccludedChangedLw()"}, {"attr": {"type": "parameter", "name": "occluded", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.onKeyguardOccludedChangedLw().occluded"}, {"attr": {"type": "parameter", "name": "waitAppTransition", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.onKeyguardOccludedChangedLw().waitAppTransition"}, {"attr": {"type": "method", "name": "setSafeMode", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setSafeMode()"}, {"attr": {"type": "parameter", "name": "safeMode", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.setSafeMode().safeMode"}, {"attr": {"type": "method", "name": "systemReady", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.systemReady()"}, {"attr": {"type": "method", "name": "systemBooted", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.systemBooted()"}, {"attr": {"type": "method", "name": "showBootMessage", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.showBootMessage()"}, {"attr": {"type": "parameter", "name": "msg", "nullable": false, "actual_type": "CharSequence"}, "id": "src2620.java.TestWindowManagerPolicy.showBootMessage().msg"}, {"attr": {"type": "parameter", "name": "always", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.showBootMessage().always"}, {"attr": {"type": "method", "name": "hideBootMessages", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.hideBootMessages()"}, {"attr": {"type": "method", "name": "userActivity", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.userActivity()"}, {"attr": {"type": "parameter", "name": "displayGroupId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.userActivity().displayGroupId"}, {"attr": {"type": "parameter", "name": "event", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.userActivity().event"}, {"attr": {"type": "method", "name": "enableScreenAfterBoot", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.enableScreenAfterBoot()"}, {"attr": {"type": "method", "name": "performHapticFeedback", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.performHapticFeedback()"}, {"attr": {"type": "parameter", "name": "uid", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().uid"}, {"attr": {"type": "parameter", "name": "packageName", "nullable": false, "actual_type": "String"}, "id": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().packageName"}, {"attr": {"type": "parameter", "name": "effectId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().effectId"}, {"attr": {"type": "parameter", "name": "always", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().always"}, {"attr": {"type": "parameter", "name": "reason", "nullable": false, "actual_type": "String"}, "id": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().reason"}, {"attr": {"type": "method", "name": "keepScreenOnStartedLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.keepScreenOnStartedLw()"}, {"attr": {"type": "method", "name": "keepScreenOnStoppedLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.keepScreenOnStoppedLw()"}, {"attr": {"type": "method", "name": "hasNavigationBar", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.hasNavigationBar()"}, {"attr": {"type": "method", "name": "lockNow", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.lockNow()"}, {"attr": {"type": "parameter", "name": "options", "nullable": false, "actual_type": "Bundle"}, "id": "src2620.java.TestWindowManagerPolicy.lockNow().options"}, {"attr": {"type": "method", "name": "showRecentApps", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.showRecentApps()"}, {"attr": {"type": "method", "name": "showGlobalActions", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.showGlobalActions()"}, {"attr": {"type": "method", "name": "isUserSetupComplete", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.isUserSetupComplete()"}, {"attr": {"type": "method", "name": "getUiMode", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.getUiMode()"}, {"attr": {"type": "method", "name": "setCurrentUserLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setCurrentUserLw()"}, {"attr": {"type": "parameter", "name": "newUserId", "nullable": false, "actual_type": "int"}, "id": "src2620.java.TestWindowManagerPolicy.setCurrentUserLw().newUserId"}, {"attr": {"type": "method", "name": "setSwitchingUser", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setSwitchingUser()"}, {"attr": {"type": "parameter", "name": "switching", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.setSwitchingUser().switching"}, {"attr": {"type": "method", "name": "dumpDebug", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.dumpDebug()"}, {"attr": {"type": "parameter", "name": "proto", "nullable": false, "actual_type": "ProtoOutputStream"}, "id": "src2620.java.TestWindowManagerPolicy.dumpDebug().proto"}, {"attr": {"type": "parameter", "name": "fieldId", "nullable": false, "actual_type": "long"}, "id": "src2620.java.TestWindowManagerPolicy.dumpDebug().fieldId"}, {"attr": {"type": "method", "name": "dump", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.dump()"}, {"attr": {"type": "parameter", "name": "prefix", "nullable": false, "actual_type": "String"}, "id": "src2620.java.TestWindowManagerPolicy.dump().prefix"}, {"attr": {"type": "parameter", "name": "writer", "nullable": false, "actual_type": "PrintWriter"}, "id": "src2620.java.TestWindowManagerPolicy.dump().writer"}, {"attr": {"type": "parameter", "name": "args", "nullable": false, "actual_type": "String"}, "id": "src2620.java.TestWindowManagerPolicy.dump().args"}, {"attr": {"type": "method", "name": "startKeyguardExitAnimation", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.startKeyguardExitAnimation()"}, {"attr": {"type": "parameter", "name": "startTime", "nullable": false, "actual_type": "long"}, "id": "src2620.java.TestWindowManagerPolicy.startKeyguardExitAnimation().startTime"}, {"attr": {"type": "parameter", "name": "fadeoutDuration", "nullable": false, "actual_type": "long"}, "id": "src2620.java.TestWindowManagerPolicy.startKeyguardExitAnimation().fadeoutDuration"}, {"attr": {"type": "method", "name": "applyKeyguardOcclusionChange", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.applyKeyguardOcclusionChange()"}, {"attr": {"type": "parameter", "name": "keyguardOccludingStarted", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.applyKeyguardOcclusionChange().keyguardOccludingStarted"}, {"attr": {"type": "method", "name": "setPipVisibilityLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setPipVisibilityLw()"}, {"attr": {"type": "parameter", "name": "visible", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.setPipVisibilityLw().visible"}, {"attr": {"type": "method", "name": "setRecentsVisibilityLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setRecentsVisibilityLw()"}, {"attr": {"type": "parameter", "name": "visible", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.setRecentsVisibilityLw().visible"}, {"attr": {"type": "method", "name": "setNavBarVirtualKeyHapticFeedbackEnabledLw", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.setNavBarVirtualKeyHapticFeedbackEnabledLw()"}, {"attr": {"type": "parameter", "name": "enabled", "nullable": false, "actual_type": "boolean"}, "id": "src2620.java.TestWindowManagerPolicy.setNavBarVirtualKeyHapticFeedbackEnabledLw().enabled"}, {"attr": {"type": "method", "name": "onSystemUiStarted", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.onSystemUiStarted()"}, {"attr": {"type": "method", "name": "canDismissBootAnimation", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.canDismissBootAnimation()"}, {"attr": {"type": "field", "name": "mKeyguardShowingAndNotOccluded", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.mKeyguardShowingAndNotOccluded"}, {"attr": {"type": "field", "name": "mOkToAnimate", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.mOkToAnimate"}, {"attr": {"type": "field", "name": "mIsUserSetupComplete", "nullable": false, "actual_type": null}, "id": "src2620.java.TestWindowManagerPolicy.mIsUserSetupComplete"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src2620.java.null_78_16"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src2620.java.null_83_16"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src2620.java.null_105_16"}], "links": [{"type": "contains", "source": "src2620.java", "target": "src2620.java.TestWindowManagerPolicy"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.registerShortcutKey()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.init()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setDefaultDisplay()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.checkAddPermission()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardHostWindow()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.createKeyguardWallpaperExit()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeQueueing()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setTopFocusedDisplay()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setAllowLockscreenWhenOn()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.startedWakingUp()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.finishedWakingUp()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.startedGoingToSleep()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.finishedGoingToSleep()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.screenTurningOn()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.screenTurnedOn()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.screenTurningOff()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.screenTurnedOff()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isScreenOn()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.okToAnimate()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.notifyLidSwitchChanged()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.notifyCameraLensCoverSwitchChanged()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.enableKeyguard()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.exitKeyguardSecurely()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardLocked()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardSecure()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardOccluded()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardTrustedLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardShowing()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardShowingAndNotOccluded()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.inKeyguardRestrictedKeyInputMode()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.dismissKeyguardLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardDrawnLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.onKeyguardOccludedChangedLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setSafeMode()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.systemReady()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.systemBooted()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.showBootMessage()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.hideBootMessages()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.userActivity()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.enableScreenAfterBoot()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.performHapticFeedback()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.keepScreenOnStartedLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.keepScreenOnStoppedLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.hasNavigationBar()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.lockNow()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.showRecentApps()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.showGlobalActions()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.isUserSetupComplete()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.getUiMode()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setCurrentUserLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setSwitchingUser()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.dumpDebug()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.dump()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.startKeyguardExitAnimation()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.applyKeyguardOcclusionChange()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setPipVisibilityLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setRecentsVisibilityLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.setNavBarVirtualKeyHapticFeedbackEnabledLw()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.onSystemUiStarted()"}, {"type": "contains", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.canDismissBootAnimation()"}, {"type": "has_field", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.mKeyguardShowingAndNotOccluded"}, {"type": "has_field", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.mOkToAnimate"}, {"type": "has_field", "source": "src2620.java.TestWindowManagerPolicy", "target": "src2620.java.TestWindowManagerPolicy.mIsUserSetupComplete"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.registerShortcutKey()", "target": "src2620.java.TestWindowManagerPolicy.registerShortcutKey().shortcutCode"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.registerShortcutKey()", "target": "src2620.java.TestWindowManagerPolicy.registerShortcutKey().shortcutKeyReceiver"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.init()", "target": "src2620.java.TestWindowManagerPolicy.init().context"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.init()", "target": "src2620.java.TestWindowManagerPolicy.init().windowManagerFuncs"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setDefaultDisplay()", "target": "src2620.java.TestWindowManagerPolicy.setDefaultDisplay().displayContentInfo"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.checkAddPermission()", "target": "src2620.java.TestWindowManagerPolicy.checkAddPermission().type"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.checkAddPermission()", "target": "src2620.java.TestWindowManagerPolicy.checkAddPermission().isRoundedCornerOverlay"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.checkAddPermission()", "target": "src2620.java.TestWindowManagerPolicy.checkAddPermission().packageName"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.checkAddPermission()", "target": "src2620.java.TestWindowManagerPolicy.checkAddPermission().outAppOp"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw()", "target": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw().config"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw()", "target": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw().keyboardPresence"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw()", "target": "src2620.java.TestWindowManagerPolicy.adjustConfigurationLw().navigationPresence"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.isKeyguardHostWindow()", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardHostWindow().attrs"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit()", "target": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit().onWallpaper"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit()", "target": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit().goingToNotificationShade"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit()", "target": "src2620.java.TestWindowManagerPolicy.createHiddenByKeyguardExit().subtleAnimation"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.createKeyguardWallpaperExit()", "target": "src2620.java.TestWindowManagerPolicy.createKeyguardWallpaperExit().goingToNotificationShade"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeQueueing()", "target": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeQueueing().event"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeQueueing()", "target": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeQueueing().policyFlags"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive()", "target": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive().displayId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive()", "target": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive().whenNanos"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive()", "target": "src2620.java.TestWindowManagerPolicy.interceptMotionBeforeQueueingNonInteractive().policyFlags"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching()", "target": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching().focusedToken"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching()", "target": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching().event"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching()", "target": "src2620.java.TestWindowManagerPolicy.interceptKeyBeforeDispatching().policyFlags"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey()", "target": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey().focusedToken"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey()", "target": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey().event"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey()", "target": "src2620.java.TestWindowManagerPolicy.dispatchUnhandledKey().policyFlags"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setTopFocusedDisplay()", "target": "src2620.java.TestWindowManagerPolicy.setTopFocusedDisplay().displayId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setAllowLockscreenWhenOn()", "target": "src2620.java.TestWindowManagerPolicy.setAllowLockscreenWhenOn().displayId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setAllowLockscreenWhenOn()", "target": "src2620.java.TestWindowManagerPolicy.setAllowLockscreenWhenOn().allow"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.startedWakingUp()", "target": "src2620.java.TestWindowManagerPolicy.startedWakingUp().wakeReason"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.finishedWakingUp()", "target": "src2620.java.TestWindowManagerPolicy.finishedWakingUp().wakeReason"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.startedGoingToSleep()", "target": "src2620.java.TestWindowManagerPolicy.startedGoingToSleep().sleepReason"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.finishedGoingToSleep()", "target": "src2620.java.TestWindowManagerPolicy.finishedGoingToSleep().sleepReason"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged()", "target": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged().groupId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged()", "target": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged().wakefulness"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged()", "target": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged().pmSleepReason"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged()", "target": "src2620.java.TestWindowManagerPolicy.onPowerGroupWakefulnessChanged().globalWakefulness"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.screenTurningOn()", "target": "src2620.java.TestWindowManagerPolicy.screenTurningOn().displayId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.screenTurningOn()", "target": "src2620.java.TestWindowManagerPolicy.screenTurningOn().screenOnListener"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.screenTurnedOn()", "target": "src2620.java.TestWindowManagerPolicy.screenTurnedOn().displayId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.screenTurningOff()", "target": "src2620.java.TestWindowManagerPolicy.screenTurningOff().displayId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.screenTurningOff()", "target": "src2620.java.TestWindowManagerPolicy.screenTurningOff().screenOffListener"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.screenTurnedOff()", "target": "src2620.java.TestWindowManagerPolicy.screenTurnedOff().displayId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.okToAnimate()", "target": "src2620.java.TestWindowManagerPolicy.okToAnimate().ignoreScreenOn"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.notifyLidSwitchChanged()", "target": "src2620.java.TestWindowManagerPolicy.notifyLidSwitchChanged().whenNanos"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.notifyLidSwitchChanged()", "target": "src2620.java.TestWindowManagerPolicy.notifyLidSwitchChanged().lidOpen"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.notifyCameraLensCoverSwitchChanged()", "target": "src2620.java.TestWindowManagerPolicy.notifyCameraLensCoverSwitchChanged().whenNanos"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.notifyCameraLensCoverSwitchChanged()", "target": "src2620.java.TestWindowManagerPolicy.notifyCameraLensCoverSwitchChanged().lensCovered"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.enableKeyguard()", "target": "src2620.java.TestWindowManagerPolicy.enableKeyguard().enabled"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.exitKeyguardSecurely()", "target": "src2620.java.TestWindowManagerPolicy.exitKeyguardSecurely().callback"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.isKeyguardSecure()", "target": "src2620.java.TestWindowManagerPolicy.isKeyguardSecure().userId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dismissKeyguardLw()", "target": "src2620.java.TestWindowManagerPolicy.dismissKeyguardLw().callback"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dismissKeyguardLw()", "target": "src2620.java.TestWindowManagerPolicy.dismissKeyguardLw().message"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.onKeyguardOccludedChangedLw()", "target": "src2620.java.TestWindowManagerPolicy.onKeyguardOccludedChangedLw().occluded"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.onKeyguardOccludedChangedLw()", "target": "src2620.java.TestWindowManagerPolicy.onKeyguardOccludedChangedLw().waitAppTransition"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setSafeMode()", "target": "src2620.java.TestWindowManagerPolicy.setSafeMode().safeMode"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.showBootMessage()", "target": "src2620.java.TestWindowManagerPolicy.showBootMessage().msg"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.showBootMessage()", "target": "src2620.java.TestWindowManagerPolicy.showBootMessage().always"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.userActivity()", "target": "src2620.java.TestWindowManagerPolicy.userActivity().displayGroupId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.userActivity()", "target": "src2620.java.TestWindowManagerPolicy.userActivity().event"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.performHapticFeedback()", "target": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().uid"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.performHapticFeedback()", "target": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().packageName"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.performHapticFeedback()", "target": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().effectId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.performHapticFeedback()", "target": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().always"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.performHapticFeedback()", "target": "src2620.java.TestWindowManagerPolicy.performHapticFeedback().reason"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.lockNow()", "target": "src2620.java.TestWindowManagerPolicy.lockNow().options"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setCurrentUserLw()", "target": "src2620.java.TestWindowManagerPolicy.setCurrentUserLw().newUserId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setSwitchingUser()", "target": "src2620.java.TestWindowManagerPolicy.setSwitchingUser().switching"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dumpDebug()", "target": "src2620.java.TestWindowManagerPolicy.dumpDebug().proto"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dumpDebug()", "target": "src2620.java.TestWindowManagerPolicy.dumpDebug().fieldId"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dump()", "target": "src2620.java.TestWindowManagerPolicy.dump().prefix"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dump()", "target": "src2620.java.TestWindowManagerPolicy.dump().writer"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.dump()", "target": "src2620.java.TestWindowManagerPolicy.dump().args"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.startKeyguardExitAnimation()", "target": "src2620.java.TestWindowManagerPolicy.startKeyguardExitAnimation().startTime"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.startKeyguardExitAnimation()", "target": "src2620.java.TestWindowManagerPolicy.startKeyguardExitAnimation().fadeoutDuration"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.applyKeyguardOcclusionChange()", "target": "src2620.java.TestWindowManagerPolicy.applyKeyguardOcclusionChange().keyguardOccludingStarted"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setPipVisibilityLw()", "target": "src2620.java.TestWindowManagerPolicy.setPipVisibilityLw().visible"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setRecentsVisibilityLw()", "target": "src2620.java.TestWindowManagerPolicy.setRecentsVisibilityLw().visible"}, {"type": "has_parameter", "source": "src2620.java.TestWindowManagerPolicy.setNavBarVirtualKeyHapticFeedbackEnabledLw()", "target": "src2620.java.TestWindowManagerPolicy.setNavBarVirtualKeyHapticFeedbackEnabledLw().enabled"}]}