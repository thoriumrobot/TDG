{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "file", "name": "src677.java", "nullable": false, "actual_type": null}, "id": "src677.java"}, {"attr": {"type": "class", "name": "ExpressionDecomposer", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer"}, {"attr": {"type": "method", "name": "maybeExposeExpression", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.maybeExposeExpression()"}, {"attr": {"type": "parameter", "name": "expression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.maybeExposeExpression().expression"}, {"attr": {"type": "method", "name": "exposeExpression", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.exposeExpression()"}, {"attr": {"type": "parameter", "name": "expression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.exposeExpression().expression"}, {"attr": {"type": "parameter", "name": "expressionRoot", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.exposeExpression().expressionRoot"}, {"attr": {"type": "parameter", "name": "subExpression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.exposeExpression().subExpression"}, {"attr": {"type": "method", "name": "rewriteAllContainingOptionalChains", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.rewriteAllContainingOptionalChains()"}, {"attr": {"type": "parameter", "name": "subExpression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.rewriteAllContainingOptionalChains().subExpression"}, {"attr": {"type": "method", "name": "moveExpression", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.moveExpression()"}, {"attr": {"type": "parameter", "name": "expression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.moveExpression().expression"}, {"attr": {"type": "method", "name": "findNonconditionalParent", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.findNonconditionalParent()"}, {"attr": {"type": "parameter", "name": "subExpression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.findNonconditionalParent().subExpression"}, {"attr": {"type": "parameter", "name": "expressionRoot", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.findNonconditionalParent().expressionRoot"}, {"attr": {"type": "method", "name": "decomposeSubExpressions", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.decomposeSubExpressions()"}, {"attr": {"type": "parameter", "name": "n", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.decomposeSubExpressions().n"}, {"attr": {"type": "parameter", "name": "stopNode", "nullable": true, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.decomposeSubExpressions().stopNode"}, {"attr": {"type": "parameter", "name": "state", "nullable": false, "actual_type": "DecompositionState"}, "id": "src677.java.ExpressionDecomposer.decomposeSubExpressions().state"}, {"attr": {"type": "method", "name": "extractConditional", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.extractConditional()"}, {"attr": {"type": "parameter", "name": "expr", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.extractConditional().expr"}, {"attr": {"type": "parameter", "name": "injectionPoint", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.extractConditional().injectionPoint"}, {"attr": {"type": "parameter", "name": "needResult", "nullable": false, "actual_type": "boolean"}, "id": "src677.java.ExpressionDecomposer.extractConditional().needResult"}, {"attr": {"type": "method", "name": "buildResultExpression", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.buildResultExpression()"}, {"attr": {"type": "parameter", "name": "expr", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.buildResultExpression().expr"}, {"attr": {"type": "parameter", "name": "needResult", "nullable": false, "actual_type": "boolean"}, "id": "src677.java.ExpressionDecomposer.buildResultExpression().needResult"}, {"attr": {"type": "parameter", "name": "tempName", "nullable": false, "actual_type": "String"}, "id": "src677.java.ExpressionDecomposer.buildResultExpression().tempName"}, {"attr": {"type": "method", "name": "isConstantNameNode", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.isConstantNameNode()"}, {"attr": {"type": "parameter", "name": "n", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.isConstantNameNode().n"}, {"attr": {"type": "method", "name": "extractExpression", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.extractExpression()"}, {"attr": {"type": "parameter", "name": "expr", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.extractExpression().expr"}, {"attr": {"type": "parameter", "name": "injectionPoint", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.extractExpression().injectionPoint"}, {"attr": {"type": "method", "name": "rewriteCallExpression", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.rewriteCallExpression()"}, {"attr": {"type": "parameter", "name": "call", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.rewriteCallExpression().call"}, {"attr": {"type": "parameter", "name": "state", "nullable": false, "actual_type": "DecompositionState"}, "id": "src677.java.ExpressionDecomposer.rewriteCallExpression().state"}, {"attr": {"type": "method", "name": "setTempNamePrefix", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.setTempNamePrefix()"}, {"attr": {"type": "parameter", "name": "prefix", "nullable": false, "actual_type": "String"}, "id": "src677.java.ExpressionDecomposer.setTempNamePrefix().prefix"}, {"attr": {"type": "method", "name": "getTempValueName", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.getTempValueName()"}, {"attr": {"type": "method", "name": "setResultNamePrefix", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.setResultNamePrefix()"}, {"attr": {"type": "parameter", "name": "prefix", "nullable": false, "actual_type": "String"}, "id": "src677.java.ExpressionDecomposer.setResultNamePrefix().prefix"}, {"attr": {"type": "method", "name": "getResultValueName", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.getResultValueName()"}, {"attr": {"type": "method", "name": "getTempConstantValueName", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.getTempConstantValueName()"}, {"attr": {"type": "method", "name": "isTempConstantValueName", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.isTempConstantValueName()"}, {"attr": {"type": "parameter", "name": "name", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.isTempConstantValueName().name"}, {"attr": {"type": "method", "name": "findInjectionPoint", "nullable": true, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.findInjectionPoint()"}, {"attr": {"type": "parameter", "name": "subExpression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.findInjectionPoint().subExpression"}, {"attr": {"type": "method", "name": "isConditionalOp", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.isConditionalOp()"}, {"attr": {"type": "parameter", "name": "n", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.isConditionalOp().n"}, {"attr": {"type": "method", "name": "findExpressionRoot", "nullable": true, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.findExpressionRoot()"}, {"attr": {"type": "parameter", "name": "subExpression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.findExpressionRoot().subExpression"}, {"attr": {"type": "method", "name": "canExposeExpression", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.canExposeExpression()"}, {"attr": {"type": "parameter", "name": "subExpression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.canExposeExpression().subExpression"}, {"attr": {"type": "method", "name": "isSubexpressionMovable", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.isSubexpressionMovable()"}, {"attr": {"type": "parameter", "name": "expressionRoot", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.isSubexpressionMovable().expressionRoot"}, {"attr": {"type": "parameter", "name": "subExpression", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.isSubexpressionMovable().subExpression"}, {"attr": {"type": "method", "name": "getEvaluationDirection", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.getEvaluationDirection()"}, {"attr": {"type": "parameter", "name": "node", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.getEvaluationDirection().node"}, {"attr": {"type": "method", "name": "getFirstEvaluatedChild", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.getFirstEvaluatedChild()"}, {"attr": {"type": "parameter", "name": "parent", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.getFirstEvaluatedChild().parent"}, {"attr": {"type": "parameter", "name": "direction", "nullable": false, "actual_type": "EvaluationDirection"}, "id": "src677.java.ExpressionDecomposer.getFirstEvaluatedChild().direction"}, {"attr": {"type": "method", "name": "getNextEvaluatedSibling", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.getNextEvaluatedSibling()"}, {"attr": {"type": "parameter", "name": "node", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.getNextEvaluatedSibling().node"}, {"attr": {"type": "parameter", "name": "direction", "nullable": false, "actual_type": "EvaluationDirection"}, "id": "src677.java.ExpressionDecomposer.getNextEvaluatedSibling().direction"}, {"attr": {"type": "method", "name": "isSafeAssign", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.isSafeAssign()"}, {"attr": {"type": "parameter", "name": "n", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.isSafeAssign().n"}, {"attr": {"type": "parameter", "name": "seenSideEffects", "nullable": false, "actual_type": "boolean"}, "id": "src677.java.ExpressionDecomposer.isSafeAssign().seenSideEffects"}, {"attr": {"type": "method", "name": "isExpressionTreeUnsafe", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.isExpressionTreeUnsafe()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false, "actual_type": "Node"}, "id": "src677.java.ExpressionDecomposer.isExpressionTreeUnsafe().tree"}, {"attr": {"type": "parameter", "name": "followingSideEffectsExist", "nullable": false, "actual_type": "boolean"}, "id": "src677.java.ExpressionDecomposer.isExpressionTreeUnsafe().followingSideEffectsExist"}, {"attr": {"type": "field", "name": "compiler", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.compiler"}, {"attr": {"type": "field", "name": "astAnalyzer", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.astAnalyzer"}, {"attr": {"type": "field", "name": "astFactory", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.astFactory"}, {"attr": {"type": "field", "name": "safeNameIdSupplier", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.safeNameIdSupplier"}, {"attr": {"type": "field", "name": "knownConstantFunctions", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.knownConstantFunctions"}, {"attr": {"type": "field", "name": "scope", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.scope"}, {"attr": {"type": "field", "name": "enabledWorkarounds", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.enabledWorkarounds"}, {"attr": {"type": "field", "name": "unknownType", "nullable": true, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.unknownType"}, {"attr": {"type": "field", "name": "MAX_ITERATIONS", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.MAX_ITERATIONS"}, {"attr": {"type": "field", "name": "tempNamePrefix", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.tempNamePrefix"}, {"attr": {"type": "field", "name": "resultNamePrefix", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.resultNamePrefix"}, {"attr": {"type": "field", "name": "WINDOW_LOCATION_ASSIGN", "nullable": false, "actual_type": null}, "id": "src677.java.ExpressionDecomposer.WINDOW_LOCATION_ASSIGN"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_113_15"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_198_37"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_226_61"}, {"id": "src677.java.decomposeSubExpressions"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_425_14"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_503_17"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_622_31"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_631_48"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_634_37"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_706_86"}, {"id": "src677.java.declare"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_710_31"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_736_25"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_918_18"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_977_27"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src677.java.null_1047_20"}, {"attr": {"type": "class", "name": "DecompositionState", "nullable": false, "actual_type": null}, "id": "src677.java.DecompositionState"}, {"attr": {"type": "method", "name": "toString", "nullable": false, "actual_type": null}, "id": "src677.java.DecompositionState.toString()"}, {"attr": {"type": "field", "name": "sideEffects", "nullable": false, "actual_type": null}, "id": "src677.java.DecompositionState.sideEffects"}, {"attr": {"type": "field", "name": "extractBeforeStatement", "nullable": false, "actual_type": null}, "id": "src677.java.DecompositionState.extractBeforeStatement"}], "links": [{"type": "contains", "source": "src677.java", "target": "src677.java.ExpressionDecomposer"}, {"type": "contains", "source": "src677.java", "target": "src677.java.DecompositionState"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.maybeExposeExpression()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.exposeExpression()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.rewriteAllContainingOptionalChains()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.moveExpression()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.findNonconditionalParent()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.decomposeSubExpressions()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.extractConditional()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.buildResultExpression()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.isConstantNameNode()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.extractExpression()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.rewriteCallExpression()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.setTempNamePrefix()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.getTempValueName()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.setResultNamePrefix()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.getResultValueName()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.getTempConstantValueName()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.isTempConstantValueName()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.findInjectionPoint()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.isConditionalOp()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.findExpressionRoot()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.canExposeExpression()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.isSubexpressionMovable()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.getEvaluationDirection()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.getFirstEvaluatedChild()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.getNextEvaluatedSibling()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.isSafeAssign()"}, {"type": "contains", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.isExpressionTreeUnsafe()"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.compiler"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.astAnalyzer"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.astFactory"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.safeNameIdSupplier"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.knownConstantFunctions"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.scope"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.enabledWorkarounds"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.unknownType"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.MAX_ITERATIONS"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.tempNamePrefix"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.resultNamePrefix"}, {"type": "has_field", "source": "src677.java.ExpressionDecomposer", "target": "src677.java.ExpressionDecomposer.WINDOW_LOCATION_ASSIGN"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.maybeExposeExpression()", "target": "src677.java.ExpressionDecomposer.maybeExposeExpression().expression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.exposeExpression()", "target": "src677.java.ExpressionDecomposer.exposeExpression().expression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.exposeExpression()", "target": "src677.java.ExpressionDecomposer.exposeExpression().expressionRoot"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.exposeExpression()", "target": "src677.java.ExpressionDecomposer.exposeExpression().subExpression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.rewriteAllContainingOptionalChains()", "target": "src677.java.ExpressionDecomposer.rewriteAllContainingOptionalChains().subExpression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.moveExpression()", "target": "src677.java.ExpressionDecomposer.moveExpression().expression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.findNonconditionalParent()", "target": "src677.java.ExpressionDecomposer.findNonconditionalParent().subExpression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.findNonconditionalParent()", "target": "src677.java.ExpressionDecomposer.findNonconditionalParent().expressionRoot"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.decomposeSubExpressions()", "target": "src677.java.ExpressionDecomposer.decomposeSubExpressions().n"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.decomposeSubExpressions()", "target": "src677.java.ExpressionDecomposer.decomposeSubExpressions().stopNode"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.decomposeSubExpressions()", "target": "src677.java.ExpressionDecomposer.decomposeSubExpressions().state"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.extractConditional()", "target": "src677.java.ExpressionDecomposer.extractConditional().expr"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.extractConditional()", "target": "src677.java.ExpressionDecomposer.extractConditional().injectionPoint"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.extractConditional()", "target": "src677.java.ExpressionDecomposer.extractConditional().needResult"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.buildResultExpression()", "target": "src677.java.ExpressionDecomposer.buildResultExpression().expr"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.buildResultExpression()", "target": "src677.java.ExpressionDecomposer.buildResultExpression().needResult"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.buildResultExpression()", "target": "src677.java.ExpressionDecomposer.buildResultExpression().tempName"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isConstantNameNode()", "target": "src677.java.ExpressionDecomposer.isConstantNameNode().n"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.extractExpression()", "target": "src677.java.ExpressionDecomposer.extractExpression().expr"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.extractExpression()", "target": "src677.java.ExpressionDecomposer.extractExpression().injectionPoint"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.rewriteCallExpression()", "target": "src677.java.ExpressionDecomposer.rewriteCallExpression().call"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.rewriteCallExpression()", "target": "src677.java.ExpressionDecomposer.rewriteCallExpression().state"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.setTempNamePrefix()", "target": "src677.java.ExpressionDecomposer.setTempNamePrefix().prefix"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.setResultNamePrefix()", "target": "src677.java.ExpressionDecomposer.setResultNamePrefix().prefix"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isTempConstantValueName()", "target": "src677.java.ExpressionDecomposer.isTempConstantValueName().name"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.findInjectionPoint()", "target": "src677.java.ExpressionDecomposer.findInjectionPoint().subExpression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isConditionalOp()", "target": "src677.java.ExpressionDecomposer.isConditionalOp().n"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.findExpressionRoot()", "target": "src677.java.ExpressionDecomposer.findExpressionRoot().subExpression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.canExposeExpression()", "target": "src677.java.ExpressionDecomposer.canExposeExpression().subExpression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isSubexpressionMovable()", "target": "src677.java.ExpressionDecomposer.isSubexpressionMovable().expressionRoot"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isSubexpressionMovable()", "target": "src677.java.ExpressionDecomposer.isSubexpressionMovable().subExpression"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.getEvaluationDirection()", "target": "src677.java.ExpressionDecomposer.getEvaluationDirection().node"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.getFirstEvaluatedChild()", "target": "src677.java.ExpressionDecomposer.getFirstEvaluatedChild().parent"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.getFirstEvaluatedChild()", "target": "src677.java.ExpressionDecomposer.getFirstEvaluatedChild().direction"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.getNextEvaluatedSibling()", "target": "src677.java.ExpressionDecomposer.getNextEvaluatedSibling().node"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.getNextEvaluatedSibling()", "target": "src677.java.ExpressionDecomposer.getNextEvaluatedSibling().direction"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isSafeAssign()", "target": "src677.java.ExpressionDecomposer.isSafeAssign().n"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isSafeAssign()", "target": "src677.java.ExpressionDecomposer.isSafeAssign().seenSideEffects"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isExpressionTreeUnsafe()", "target": "src677.java.ExpressionDecomposer.isExpressionTreeUnsafe().tree"}, {"type": "has_parameter", "source": "src677.java.ExpressionDecomposer.isExpressionTreeUnsafe()", "target": "src677.java.ExpressionDecomposer.isExpressionTreeUnsafe().followingSideEffectsExist"}, {"type": "contains", "source": "src677.java.decomposeSubExpressions", "target": "src677.java.null_226_61"}, {"type": "contains", "source": "src677.java.declare", "target": "src677.java.null_706_86"}, {"type": "contains", "source": "src677.java.DecompositionState", "target": "src677.java.DecompositionState.toString()"}, {"type": "has_field", "source": "src677.java.DecompositionState", "target": "src677.java.DecompositionState.sideEffects"}, {"type": "has_field", "source": "src677.java.DecompositionState", "target": "src677.java.DecompositionState.extractBeforeStatement"}]}