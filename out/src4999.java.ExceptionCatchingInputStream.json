{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "ExceptionCatchingInputStream", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream"}, {"attr": {"type": "method", "name": "obtain", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.obtain()"}, {"attr": {"type": "parameter", "name": "toWrap", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.obtain().toWrap"}, {"attr": {"type": "method", "name": "clearQueue", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.clearQueue()"}, {"attr": {"type": "method", "name": "setInputStream", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.setInputStream()"}, {"attr": {"type": "parameter", "name": "toWrap", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.setInputStream().toWrap"}, {"attr": {"type": "method", "name": "available", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.available()"}, {"attr": {"type": "method", "name": "close", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.close()"}, {"attr": {"type": "method", "name": "mark", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.mark()"}, {"attr": {"type": "parameter", "name": "readLimit", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.mark().readLimit"}, {"attr": {"type": "method", "name": "markSupported", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.markSupported()"}, {"attr": {"type": "method", "name": "read", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.read()"}, {"attr": {"type": "parameter", "name": "buffer", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.read().buffer"}, {"attr": {"type": "parameter", "name": "byteOffset", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.read().byteOffset"}, {"attr": {"type": "parameter", "name": "byteCount", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.read().byteCount"}, {"attr": {"type": "method", "name": "reset", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.reset()"}, {"attr": {"type": "method", "name": "skip", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.skip()"}, {"attr": {"type": "parameter", "name": "byteCount", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.skip().byteCount"}, {"attr": {"type": "method", "name": "getException", "nullable": true}, "id": "src4999.java.ExceptionCatchingInputStream.getException()"}, {"attr": {"type": "method", "name": "release", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.release()"}, {"attr": {"type": "field", "name": "QUEUE", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.QUEUE"}, {"attr": {"type": "field", "name": "wrapped", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.wrapped"}, {"attr": {"type": "field", "name": "exception", "nullable": false}, "id": "src4999.java.ExceptionCatchingInputStream.exception"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src4999.java.null_35_19"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src4999.java.null_136_17"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src4999.java.null_137_15"}], "links": [{"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.obtain()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.clearQueue()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.setInputStream()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.available()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.close()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.mark()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.markSupported()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.read()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.reset()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.skip()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.getException()"}, {"type": "contains", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.release()"}, {"type": "has_field", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.QUEUE"}, {"type": "has_field", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.wrapped"}, {"type": "has_field", "source": "src4999.java.ExceptionCatchingInputStream", "target": "src4999.java.ExceptionCatchingInputStream.exception"}, {"type": "has_parameter", "source": "src4999.java.ExceptionCatchingInputStream.obtain()", "target": "src4999.java.ExceptionCatchingInputStream.obtain().toWrap"}, {"type": "has_parameter", "source": "src4999.java.ExceptionCatchingInputStream.setInputStream()", "target": "src4999.java.ExceptionCatchingInputStream.setInputStream().toWrap"}, {"type": "has_parameter", "source": "src4999.java.ExceptionCatchingInputStream.mark()", "target": "src4999.java.ExceptionCatchingInputStream.mark().readLimit"}, {"type": "has_parameter", "source": "src4999.java.ExceptionCatchingInputStream.read()", "target": "src4999.java.ExceptionCatchingInputStream.read().buffer"}, {"type": "has_parameter", "source": "src4999.java.ExceptionCatchingInputStream.read()", "target": "src4999.java.ExceptionCatchingInputStream.read().byteOffset"}, {"type": "has_parameter", "source": "src4999.java.ExceptionCatchingInputStream.read()", "target": "src4999.java.ExceptionCatchingInputStream.read().byteCount"}, {"type": "has_parameter", "source": "src4999.java.ExceptionCatchingInputStream.skip()", "target": "src4999.java.ExceptionCatchingInputStream.skip().byteCount"}]}