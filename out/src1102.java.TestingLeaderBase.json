{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "TestingLeaderBase", "nullable": false}, "id": "src1102.java.TestingLeaderBase"}, {"attr": {"type": "method", "name": "waitForLeader", "nullable": false}, "id": "src1102.java.TestingLeaderBase.waitForLeader()"}, {"attr": {"type": "parameter", "name": "timeout", "nullable": false}, "id": "src1102.java.TestingLeaderBase.waitForLeader().timeout"}, {"attr": {"type": "method", "name": "waitForRevokeLeader", "nullable": false}, "id": "src1102.java.TestingLeaderBase.waitForRevokeLeader()"}, {"attr": {"type": "parameter", "name": "timeout", "nullable": false}, "id": "src1102.java.TestingLeaderBase.waitForRevokeLeader().timeout"}, {"attr": {"type": "method", "name": "waitForError", "nullable": false}, "id": "src1102.java.TestingLeaderBase.waitForError()"}, {"attr": {"type": "parameter", "name": "timeout", "nullable": false}, "id": "src1102.java.TestingLeaderBase.waitForError().timeout"}, {"attr": {"type": "method", "name": "handleError", "nullable": false}, "id": "src1102.java.TestingLeaderBase.handleError()"}, {"attr": {"type": "parameter", "name": "ex", "nullable": false}, "id": "src1102.java.TestingLeaderBase.handleError().ex"}, {"attr": {"type": "method", "name": "getError", "nullable": true}, "id": "src1102.java.TestingLeaderBase.getError()"}, {"attr": {"type": "method", "name": "isLeader", "nullable": false}, "id": "src1102.java.TestingLeaderBase.isLeader()"}, {"attr": {"type": "method", "name": "throwExceptionIfNotNull", "nullable": false}, "id": "src1102.java.TestingLeaderBase.throwExceptionIfNotNull()"}, {"attr": {"type": "field", "name": "leaderEventQueue", "nullable": false}, "id": "src1102.java.TestingLeaderBase.leaderEventQueue"}, {"attr": {"type": "field", "name": "errorQueue", "nullable": false}, "id": "src1102.java.TestingLeaderBase.errorQueue"}, {"attr": {"type": "field", "name": "isLeader", "nullable": false}, "id": "src1102.java.TestingLeaderBase.isLeader"}, {"attr": {"type": "field", "name": "error", "nullable": false}, "id": "src1102.java.TestingLeaderBase.error"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src1102.java.null_51_38"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src1102.java.null_67_38"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src1102.java.null_80_37"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src1102.java.null_105_22"}], "links": [{"type": "contains", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.waitForLeader()"}, {"type": "contains", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.waitForRevokeLeader()"}, {"type": "contains", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.waitForError()"}, {"type": "contains", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.handleError()"}, {"type": "contains", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.getError()"}, {"type": "contains", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.isLeader()"}, {"type": "contains", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.throwExceptionIfNotNull()"}, {"type": "has_field", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.leaderEventQueue"}, {"type": "has_field", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.errorQueue"}, {"type": "has_field", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.isLeader"}, {"type": "has_field", "source": "src1102.java.TestingLeaderBase", "target": "src1102.java.TestingLeaderBase.error"}, {"type": "has_parameter", "source": "src1102.java.TestingLeaderBase.waitForLeader()", "target": "src1102.java.TestingLeaderBase.waitForLeader().timeout"}, {"type": "has_parameter", "source": "src1102.java.TestingLeaderBase.waitForRevokeLeader()", "target": "src1102.java.TestingLeaderBase.waitForRevokeLeader().timeout"}, {"type": "has_parameter", "source": "src1102.java.TestingLeaderBase.waitForError()", "target": "src1102.java.TestingLeaderBase.waitForError().timeout"}, {"type": "has_parameter", "source": "src1102.java.TestingLeaderBase.handleError()", "target": "src1102.java.TestingLeaderBase.handleError().ex"}]}