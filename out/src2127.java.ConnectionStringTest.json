{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "ConnectionStringTest", "nullable": false}, "id": "src2127.java.ConnectionStringTest"}, {"attr": {"type": "method", "name": "throwsIfNoAddress", "nullable": false}, "id": "src2127.java.ConnectionStringTest.throwsIfNoAddress()"}, {"attr": {"type": "method", "name": "assertComplainsAboutMissingAddress", "nullable": false}, "id": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()"}, {"attr": {"type": "parameter", "name": "connectionString", "nullable": false}, "id": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress().connectionString"}, {"attr": {"type": "method", "name": "canFormat", "nullable": false}, "id": "src2127.java.ConnectionStringTest.canFormat()"}, {"attr": {"type": "method", "name": "isImmutable", "nullable": false}, "id": "src2127.java.ConnectionStringTest.isImmutable()"}, {"attr": {"type": "method", "name": "withers", "nullable": false}, "id": "src2127.java.ConnectionStringTest.withers()"}, {"attr": {"type": "method", "name": "canParseUnresolvedSocket", "nullable": false}, "id": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket()"}, {"attr": {"type": "method", "name": "assertParsedUnresolvedSocketMatches", "nullable": false}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"attr": {"type": "parameter", "name": "s", "nullable": false}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().s"}, {"attr": {"type": "parameter", "name": "expectedHost", "nullable": false}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedHost"}, {"attr": {"type": "parameter", "name": "expectedPort", "nullable": false}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPort"}, {"attr": {"type": "parameter", "name": "expectedPortType", "nullable": true}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPortType"}, {"attr": {"type": "method", "name": "shouldParseValidSchemes", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldParseValidSchemes()"}, {"attr": {"type": "method", "name": "shouldFailOnInvalidScheme", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme()"}, {"attr": {"type": "method", "name": "shouldParseHostList", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldParseHostList()"}, {"attr": {"type": "method", "name": "shouldParseParams", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldParseParams()"}, {"attr": {"type": "method", "name": "trailingParamDelimiterIsOkay", "nullable": false}, "id": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay()"}, {"attr": {"type": "method", "name": "shouldParseUsername", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldParseUsername()"}, {"attr": {"type": "method", "name": "shouldAcceptSingleIPv6WithoutPort", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort()"}, {"attr": {"type": "method", "name": "shouldAcceptMultipleIPv6WithoutPort", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort()"}, {"attr": {"type": "method", "name": "shouldAcceptSingleIPv6WithPort", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort()"}, {"attr": {"type": "method", "name": "shouldAcceptIpv4WithLcbPortType", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType()"}, {"attr": {"type": "method", "name": "shouldAcceptIpv4WithNewPortType", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType()"}, {"attr": {"type": "method", "name": "shouldAcceptIPv6WithPortType", "nullable": false}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType()"}, {"attr": {"type": "method", "name": "isValidDnsSrv", "nullable": false}, "id": "src2127.java.ConnectionStringTest.isValidDnsSrv()"}, {"attr": {"type": "method", "name": "gracefullyHandlesInvalidScheme", "nullable": false}, "id": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme()"}, {"attr": {"type": "method", "name": "acceptsMixedCaseSchemes", "nullable": false}, "id": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes()"}, {"attr": {"type": "method", "name": "canCreateFromSeedNodes", "nullable": false}, "id": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes()"}, {"attr": {"type": "method", "name": "rejectsIncompatiblePortTypes", "nullable": false}, "id": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes()"}, {"attr": {"type": "method", "name": "rejectsIncompatibleSeedNodePortTypes", "nullable": false}, "id": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes()"}, {"attr": {"type": "method", "name": "infersProtostellarScheme", "nullable": false}, "id": "src2127.java.ConnectionStringTest.infersProtostellarScheme()"}, {"attr": {"type": "method", "name": "canBuildFromIpv6SeedNode", "nullable": false}, "id": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode()"}, {"attr": {"type": "method", "name": "canIdentifyCapella", "nullable": false}, "id": "src2127.java.ConnectionStringTest.canIdentifyCapella()"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src2127.java.null_45_76"}, {"id": "src2127.java.create"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src2127.java.null_88_58"}, {"id": "src2127.java.assertParsedUnresolvedSocketMatches"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src2127.java.null_89_64"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src2127.java.null_93_72"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src2127.java.null_94_78"}], "links": [{"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.throwsIfNoAddress()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canFormat()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.isImmutable()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.withers()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldParseValidSchemes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldParseHostList()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldParseParams()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldParseUsername()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.isValidDnsSrv()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.infersProtostellarScheme()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canIdentifyCapella()"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()", "target": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress().connectionString"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().s"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedHost"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPort"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPortType"}, {"type": "contains", "source": "src2127.java.create", "target": "src2127.java.null_45_76"}, {"type": "contains", "source": "src2127.java.assertParsedUnresolvedSocketMatches", "target": "src2127.java.null_88_58"}, {"type": "contains", "source": "src2127.java.assertParsedUnresolvedSocketMatches", "target": "src2127.java.null_89_64"}, {"type": "contains", "source": "src2127.java.assertParsedUnresolvedSocketMatches", "target": "src2127.java.null_93_72"}, {"type": "contains", "source": "src2127.java.assertParsedUnresolvedSocketMatches", "target": "src2127.java.null_94_78"}]}