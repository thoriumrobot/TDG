{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "PyBinaryExpressionVisitor", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor"}, {"attr": {"type": "method", "name": "visitPyBinaryExpression", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression()"}, {"attr": {"type": "parameter", "name": "node", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression().node"}, {"attr": {"type": "method", "name": "operandsEqualTo", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo()"}, {"attr": {"type": "parameter", "name": "expr", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo().expr"}, {"attr": {"type": "parameter", "name": "literals", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo().literals"}, {"attr": {"type": "method", "name": "registerProblem", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor.registerProblem()"}, {"attr": {"type": "parameter", "name": "binaryExpression", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor.registerProblem().binaryExpression"}, {"attr": {"type": "field", "name": "myIgnoreComparisonToZero", "nullable": false}, "id": "src7781.java.PyBinaryExpressionVisitor.myIgnoreComparisonToZero"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src7781.java.null_73_24"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src7781.java.null_94_30"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src7781.java.null_109_61"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src7781.java.null_109_96"}, {"id": "src7781.java.rightExpressionText"}], "links": [{"type": "contains", "source": "src7781.java.PyBinaryExpressionVisitor", "target": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression()"}, {"type": "contains", "source": "src7781.java.PyBinaryExpressionVisitor", "target": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo()"}, {"type": "contains", "source": "src7781.java.PyBinaryExpressionVisitor", "target": "src7781.java.PyBinaryExpressionVisitor.registerProblem()"}, {"type": "has_field", "source": "src7781.java.PyBinaryExpressionVisitor", "target": "src7781.java.PyBinaryExpressionVisitor.myIgnoreComparisonToZero"}, {"type": "has_parameter", "source": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression()", "target": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression().node"}, {"type": "has_parameter", "source": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo()", "target": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo().expr"}, {"type": "has_parameter", "source": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo()", "target": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo().literals"}, {"type": "has_parameter", "source": "src7781.java.PyBinaryExpressionVisitor.registerProblem()", "target": "src7781.java.PyBinaryExpressionVisitor.registerProblem().binaryExpression"}, {"type": "contains", "source": "src7781.java.rightExpressionText", "target": "src7781.java.null_109_96"}]}