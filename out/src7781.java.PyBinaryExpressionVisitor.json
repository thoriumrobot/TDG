{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "file", "name": "src7781.java", "nullable": false, "actual_type": null}, "id": "src7781.java"}, {"attr": {"type": "class", "name": "PySimplifyBooleanCheckInspection", "nullable": false, "actual_type": null}, "id": "src7781.java.PySimplifyBooleanCheckInspection"}, {"attr": {"type": "method", "name": "buildVisitor", "nullable": false, "actual_type": null}, "id": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor()"}, {"attr": {"type": "parameter", "name": "holder", "nullable": false, "actual_type": "ProblemsHolder"}, "id": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor().holder"}, {"attr": {"type": "parameter", "name": "isOnTheFly", "nullable": false, "actual_type": "boolean"}, "id": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor().isOnTheFly"}, {"attr": {"type": "parameter", "name": "session", "nullable": false, "actual_type": "LocalInspectionToolSession"}, "id": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor().session"}, {"attr": {"type": "method", "name": "getOptionsPane", "nullable": false, "actual_type": null}, "id": "src7781.java.PySimplifyBooleanCheckInspection.getOptionsPane()"}, {"attr": {"type": "field", "name": "COMPARISON_LITERALS", "nullable": false, "actual_type": null}, "id": "src7781.java.PySimplifyBooleanCheckInspection.COMPARISON_LITERALS"}, {"attr": {"type": "field", "name": "ignoreComparisonToZero", "nullable": false, "actual_type": null}, "id": "src7781.java.PySimplifyBooleanCheckInspection.ignoreComparisonToZero"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src7781.java.null_73_24"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src7781.java.null_94_30"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src7781.java.null_109_61"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src7781.java.null_109_96"}, {"id": "src7781.java.rightExpressionText"}, {"attr": {"type": "class", "name": "Visitor", "nullable": false, "actual_type": null}, "id": "src7781.java.Visitor"}, {"attr": {"type": "method", "name": "visitPyConditionalStatementPart", "nullable": false, "actual_type": null}, "id": "src7781.java.Visitor.visitPyConditionalStatementPart()"}, {"attr": {"type": "parameter", "name": "node", "nullable": false, "actual_type": "PyConditionalStatementPart"}, "id": "src7781.java.Visitor.visitPyConditionalStatementPart().node"}, {"attr": {"type": "field", "name": "myIgnoreComparisonToZero", "nullable": false, "actual_type": null}, "id": "src7781.java.Visitor.myIgnoreComparisonToZero"}, {"attr": {"type": "class", "name": "PyBinaryExpressionVisitor", "nullable": false, "actual_type": null}, "id": "src7781.java.PyBinaryExpressionVisitor"}, {"attr": {"type": "method", "name": "visitPyBinaryExpression", "nullable": false, "actual_type": null}, "id": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression()"}, {"attr": {"type": "parameter", "name": "node", "nullable": false, "actual_type": "PyBinaryExpression"}, "id": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression().node"}, {"attr": {"type": "method", "name": "operandsEqualTo", "nullable": false, "actual_type": null}, "id": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo()"}, {"attr": {"type": "parameter", "name": "expr", "nullable": false, "actual_type": "PyBinaryExpression"}, "id": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo().expr"}, {"attr": {"type": "parameter", "name": "literals", "nullable": false, "actual_type": "Collection"}, "id": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo().literals"}, {"attr": {"type": "method", "name": "registerProblem", "nullable": false, "actual_type": null}, "id": "src7781.java.PyBinaryExpressionVisitor.registerProblem()"}, {"attr": {"type": "parameter", "name": "binaryExpression", "nullable": false, "actual_type": "PyBinaryExpression"}, "id": "src7781.java.PyBinaryExpressionVisitor.registerProblem().binaryExpression"}, {"attr": {"type": "field", "name": "myIgnoreComparisonToZero", "nullable": false, "actual_type": null}, "id": "src7781.java.PyBinaryExpressionVisitor.myIgnoreComparisonToZero"}], "links": [{"type": "contains", "source": "src7781.java", "target": "src7781.java.PySimplifyBooleanCheckInspection"}, {"type": "contains", "source": "src7781.java", "target": "src7781.java.Visitor"}, {"type": "contains", "source": "src7781.java", "target": "src7781.java.PyBinaryExpressionVisitor"}, {"type": "contains", "source": "src7781.java.PySimplifyBooleanCheckInspection", "target": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor()"}, {"type": "contains", "source": "src7781.java.PySimplifyBooleanCheckInspection", "target": "src7781.java.PySimplifyBooleanCheckInspection.getOptionsPane()"}, {"type": "has_field", "source": "src7781.java.PySimplifyBooleanCheckInspection", "target": "src7781.java.PySimplifyBooleanCheckInspection.COMPARISON_LITERALS"}, {"type": "has_field", "source": "src7781.java.PySimplifyBooleanCheckInspection", "target": "src7781.java.PySimplifyBooleanCheckInspection.ignoreComparisonToZero"}, {"type": "has_parameter", "source": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor()", "target": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor().holder"}, {"type": "has_parameter", "source": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor()", "target": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor().isOnTheFly"}, {"type": "has_parameter", "source": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor()", "target": "src7781.java.PySimplifyBooleanCheckInspection.buildVisitor().session"}, {"type": "contains", "source": "src7781.java.rightExpressionText", "target": "src7781.java.null_109_96"}, {"type": "contains", "source": "src7781.java.Visitor", "target": "src7781.java.Visitor.visitPyConditionalStatementPart()"}, {"type": "has_field", "source": "src7781.java.Visitor", "target": "src7781.java.Visitor.myIgnoreComparisonToZero"}, {"type": "has_parameter", "source": "src7781.java.Visitor.visitPyConditionalStatementPart()", "target": "src7781.java.Visitor.visitPyConditionalStatementPart().node"}, {"type": "contains", "source": "src7781.java.PyBinaryExpressionVisitor", "target": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression()"}, {"type": "contains", "source": "src7781.java.PyBinaryExpressionVisitor", "target": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo()"}, {"type": "contains", "source": "src7781.java.PyBinaryExpressionVisitor", "target": "src7781.java.PyBinaryExpressionVisitor.registerProblem()"}, {"type": "has_field", "source": "src7781.java.PyBinaryExpressionVisitor", "target": "src7781.java.PyBinaryExpressionVisitor.myIgnoreComparisonToZero"}, {"type": "has_parameter", "source": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression()", "target": "src7781.java.PyBinaryExpressionVisitor.visitPyBinaryExpression().node"}, {"type": "has_parameter", "source": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo()", "target": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo().expr"}, {"type": "has_parameter", "source": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo()", "target": "src7781.java.PyBinaryExpressionVisitor.operandsEqualTo().literals"}, {"type": "has_parameter", "source": "src7781.java.PyBinaryExpressionVisitor.registerProblem()", "target": "src7781.java.PyBinaryExpressionVisitor.registerProblem().binaryExpression"}]}