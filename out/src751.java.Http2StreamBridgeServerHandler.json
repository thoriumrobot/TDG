{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "Http2StreamBridgeServerHandler", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler"}, {"attr": {"type": "method", "name": "handlerAdded", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.handlerAdded()"}, {"attr": {"type": "parameter", "name": "ctx", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.handlerAdded().ctx"}, {"attr": {"type": "method", "name": "channelRead", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.channelRead()"}, {"attr": {"type": "parameter", "name": "ctx", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.channelRead().ctx"}, {"attr": {"type": "parameter", "name": "msg", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.channelRead().msg"}, {"attr": {"type": "method", "name": "write", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.write()"}, {"attr": {"type": "parameter", "name": "ctx", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.write().ctx"}, {"attr": {"type": "parameter", "name": "msg", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.write().msg"}, {"attr": {"type": "parameter", "name": "promise", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.write().promise"}, {"attr": {"type": "method", "name": "operationComplete", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.operationComplete()"}, {"attr": {"type": "parameter", "name": "future", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.operationComplete().future"}, {"attr": {"type": "field", "name": "compress", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.compress"}, {"attr": {"type": "field", "name": "cookieDecoder", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.cookieDecoder"}, {"attr": {"type": "field", "name": "cookieEncoder", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.cookieEncoder"}, {"attr": {"type": "field", "name": "formDecoderProvider", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.formDecoderProvider"}, {"attr": {"type": "field", "name": "forwardedHeaderHandler", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.forwardedHeaderHandler"}, {"attr": {"type": "field", "name": "httpMessageLogFactory", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.httpMessageLogFactory"}, {"attr": {"type": "field", "name": "listener", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.listener"}, {"attr": {"type": "field", "name": "mapHandle", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.mapHandle"}, {"attr": {"type": "field", "name": "readTimeout", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.readTimeout"}, {"attr": {"type": "field", "name": "requestTimeout", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.requestTimeout"}, {"attr": {"type": "field", "name": "remoteAddress", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.remoteAddress"}, {"attr": {"type": "field", "name": "secured", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.secured"}, {"attr": {"type": "field", "name": "pendingResponse", "nullable": false}, "id": "src751.java.Http2StreamBridgeServerHandler.pendingResponse"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src751.java.null_114_18"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src751.java.null_115_73"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src751.java.null_117_24"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src751.java.null_126_36"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src751.java.null_152_68"}], "links": [{"type": "contains", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.handlerAdded()"}, {"type": "contains", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.channelRead()"}, {"type": "contains", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.write()"}, {"type": "contains", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.operationComplete()"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.compress"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.cookieDecoder"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.cookieEncoder"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.formDecoderProvider"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.forwardedHeaderHandler"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.httpMessageLogFactory"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.listener"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.mapHandle"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.readTimeout"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.requestTimeout"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.remoteAddress"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.secured"}, {"type": "has_field", "source": "src751.java.Http2StreamBridgeServerHandler", "target": "src751.java.Http2StreamBridgeServerHandler.pendingResponse"}, {"type": "has_parameter", "source": "src751.java.Http2StreamBridgeServerHandler.handlerAdded()", "target": "src751.java.Http2StreamBridgeServerHandler.handlerAdded().ctx"}, {"type": "has_parameter", "source": "src751.java.Http2StreamBridgeServerHandler.channelRead()", "target": "src751.java.Http2StreamBridgeServerHandler.channelRead().ctx"}, {"type": "has_parameter", "source": "src751.java.Http2StreamBridgeServerHandler.channelRead()", "target": "src751.java.Http2StreamBridgeServerHandler.channelRead().msg"}, {"type": "has_parameter", "source": "src751.java.Http2StreamBridgeServerHandler.write()", "target": "src751.java.Http2StreamBridgeServerHandler.write().ctx"}, {"type": "has_parameter", "source": "src751.java.Http2StreamBridgeServerHandler.write()", "target": "src751.java.Http2StreamBridgeServerHandler.write().msg"}, {"type": "has_parameter", "source": "src751.java.Http2StreamBridgeServerHandler.write()", "target": "src751.java.Http2StreamBridgeServerHandler.write().promise"}, {"type": "has_parameter", "source": "src751.java.Http2StreamBridgeServerHandler.operationComplete()", "target": "src751.java.Http2StreamBridgeServerHandler.operationComplete().future"}]}