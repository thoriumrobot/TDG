{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "file", "name": "src2011.java", "nullable": false, "actual_type": null}, "id": "src2011.java"}, {"attr": {"type": "class", "name": "ForLoopConventionsChecker", "nullable": false, "actual_type": null}, "id": "src2011.java.ForLoopConventionsChecker"}, {"attr": {"type": "method", "name": "checkIterableConvention", "nullable": true, "actual_type": null}, "id": "src2011.java.ForLoopConventionsChecker.checkIterableConvention()"}, {"attr": {"type": "parameter", "name": "loopRange", "nullable": false, "actual_type": "ExpressionReceiver"}, "id": "src2011.java.ForLoopConventionsChecker.checkIterableConvention().loopRange"}, {"attr": {"type": "parameter", "name": "context", "nullable": false, "actual_type": "ExpressionTypingContext"}, "id": "src2011.java.ForLoopConventionsChecker.checkIterableConvention().context"}, {"attr": {"type": "method", "name": "checkIfOperatorModifierPresent", "nullable": false, "actual_type": null}, "id": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent()"}, {"attr": {"type": "parameter", "name": "expression", "nullable": false, "actual_type": "KtExpression"}, "id": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent().expression"}, {"attr": {"type": "parameter", "name": "descriptor", "nullable": false, "actual_type": "FunctionDescriptor"}, "id": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent().descriptor"}, {"attr": {"type": "parameter", "name": "sink", "nullable": false, "actual_type": "DiagnosticSink"}, "id": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent().sink"}, {"attr": {"type": "method", "name": "checkConventionForIterator", "nullable": true, "actual_type": null}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()"}, {"attr": {"type": "parameter", "name": "context", "nullable": false, "actual_type": "ExpressionTypingContext"}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().context"}, {"attr": {"type": "parameter", "name": "loopRangeExpression", "nullable": false, "actual_type": "KtExpression"}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().loopRangeExpression"}, {"attr": {"type": "parameter", "name": "iteratorType", "nullable": false, "actual_type": "KotlinType"}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().iteratorType"}, {"attr": {"type": "parameter", "name": "name", "nullable": false, "actual_type": "Name"}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().name"}, {"attr": {"type": "parameter", "name": "ambiguity", "nullable": false, "actual_type": "DiagnosticFactory1"}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().ambiguity"}, {"attr": {"type": "parameter", "name": "missing", "nullable": false, "actual_type": "DiagnosticFactory1"}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().missing"}, {"attr": {"type": "parameter", "name": "noneApplicable", "nullable": false, "actual_type": "DiagnosticFactory1"}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().noneApplicable"}, {"attr": {"type": "parameter", "name": "resolvedCallKey", "nullable": false, "actual_type": "WritableSlice"}, "id": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().resolvedCallKey"}, {"attr": {"type": "field", "name": "builtIns", "nullable": false, "actual_type": null}, "id": "src2011.java.ForLoopConventionsChecker.builtIns"}, {"attr": {"type": "field", "name": "fakeCallResolver", "nullable": false, "actual_type": null}, "id": "src2011.java.ForLoopConventionsChecker.fakeCallResolver"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src2011.java.null_65_60"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src2011.java.null_79_28"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src2011.java.null_91_44"}, {"attr": {"type": "literal", "name": "null", "nullable": false, "actual_type": null}, "id": "src2011.java.null_132_16"}], "links": [{"type": "contains", "source": "src2011.java", "target": "src2011.java.ForLoopConventionsChecker"}, {"type": "contains", "source": "src2011.java.ForLoopConventionsChecker", "target": "src2011.java.ForLoopConventionsChecker.checkIterableConvention()"}, {"type": "contains", "source": "src2011.java.ForLoopConventionsChecker", "target": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent()"}, {"type": "contains", "source": "src2011.java.ForLoopConventionsChecker", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()"}, {"type": "has_field", "source": "src2011.java.ForLoopConventionsChecker", "target": "src2011.java.ForLoopConventionsChecker.builtIns"}, {"type": "has_field", "source": "src2011.java.ForLoopConventionsChecker", "target": "src2011.java.ForLoopConventionsChecker.fakeCallResolver"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkIterableConvention()", "target": "src2011.java.ForLoopConventionsChecker.checkIterableConvention().loopRange"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkIterableConvention()", "target": "src2011.java.ForLoopConventionsChecker.checkIterableConvention().context"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent()", "target": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent().expression"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent()", "target": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent().descriptor"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent()", "target": "src2011.java.ForLoopConventionsChecker.checkIfOperatorModifierPresent().sink"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().context"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().loopRangeExpression"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().iteratorType"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().name"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().ambiguity"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().missing"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().noneApplicable"}, {"type": "has_parameter", "source": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator()", "target": "src2011.java.ForLoopConventionsChecker.checkConventionForIterator().resolvedCallKey"}]}