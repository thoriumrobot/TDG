{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "XPFlagCleaner", "nullable": false}, "id": "src8845.java.XPFlagCleaner"}, {"attr": {"type": "method", "name": "init", "nullable": false}, "id": "src8845.java.XPFlagCleaner.init()"}, {"attr": {"type": "parameter", "name": "flags", "nullable": false}, "id": "src8845.java.XPFlagCleaner.init().flags"}, {"attr": {"type": "method", "name": "shouldSkip", "nullable": false}, "id": "src8845.java.XPFlagCleaner.shouldSkip()"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.shouldSkip().state"}, {"attr": {"type": "method", "name": "skipWithin", "nullable": false}, "id": "src8845.java.XPFlagCleaner.skipWithin()"}, {"attr": {"type": "parameter", "name": "path", "nullable": false}, "id": "src8845.java.XPFlagCleaner.skipWithin().path"}, {"attr": {"type": "method", "name": "computeSymbolCounts", "nullable": false}, "id": "src8845.java.XPFlagCleaner.computeSymbolCounts()"}, {"attr": {"type": "parameter", "name": "visitorState", "nullable": false}, "id": "src8845.java.XPFlagCleaner.computeSymbolCounts().visitorState"}, {"attr": {"type": "method", "name": "decrementSymbolUsage", "nullable": false}, "id": "src8845.java.XPFlagCleaner.decrementSymbolUsage()"}, {"attr": {"type": "parameter", "name": "symbol", "nullable": false}, "id": "src8845.java.XPFlagCleaner.decrementSymbolUsage().symbol"}, {"attr": {"type": "parameter", "name": "visitorState", "nullable": false}, "id": "src8845.java.XPFlagCleaner.decrementSymbolUsage().visitorState"}, {"attr": {"type": "parameter", "name": "builder", "nullable": false}, "id": "src8845.java.XPFlagCleaner.decrementSymbolUsage().builder"}, {"attr": {"type": "method", "name": "decrementAllSymbolUsages", "nullable": false}, "id": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages().tree"}, {"attr": {"type": "parameter", "name": "visitorState", "nullable": false}, "id": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages().visitorState"}, {"attr": {"type": "parameter", "name": "builder", "nullable": false}, "id": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages().builder"}, {"attr": {"type": "method", "name": "matchCompilationUnit", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchCompilationUnit()"}, {"attr": {"type": "parameter", "name": "compilationUnitTree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchCompilationUnit().compilationUnitTree"}, {"attr": {"type": "parameter", "name": "visitorState", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchCompilationUnit().visitorState"}, {"attr": {"type": "method", "name": "linkUrl", "nullable": false}, "id": "src8845.java.XPFlagCleaner.linkUrl()"}, {"attr": {"type": "method", "name": "getXPAPI", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getXPAPI()"}, {"attr": {"type": "parameter", "name": "et", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getXPAPI().et"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getXPAPI().state"}, {"attr": {"type": "method", "name": "methodRecordMatcher", "nullable": false}, "id": "src8845.java.XPFlagCleaner.methodRecordMatcher()"}, {"attr": {"type": "parameter", "name": "methodRecord", "nullable": false}, "id": "src8845.java.XPFlagCleaner.methodRecordMatcher().methodRecord"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.methodRecordMatcher().state"}, {"attr": {"type": "parameter", "name": "mit", "nullable": false}, "id": "src8845.java.XPFlagCleaner.methodRecordMatcher().mit"}, {"attr": {"type": "method", "name": "enumConstructorArgsContainsFlagNameMatcher", "nullable": false}, "id": "src8845.java.XPFlagCleaner.enumConstructorArgsContainsFlagNameMatcher()"}, {"attr": {"type": "parameter", "name": "enumRecords", "nullable": false}, "id": "src8845.java.XPFlagCleaner.enumConstructorArgsContainsFlagNameMatcher().enumRecords"}, {"attr": {"type": "parameter", "name": "mit", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getXPAPI().mit"}, {"attr": {"type": "parameter", "name": "methodRecordsForName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getXPAPI().methodRecordsForName"}, {"attr": {"type": "method", "name": "isArgumentMatchesFlagMethod", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagMethod()"}, {"attr": {"type": "parameter", "name": "arg", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagMethod().arg"}, {"attr": {"type": "method", "name": "isArgumentMatchesFlagName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagName()"}, {"attr": {"type": "parameter", "name": "arg", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagName().arg"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagName().state"}, {"attr": {"type": "method", "name": "isMatchingEnumFieldValue", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isMatchingEnumFieldValue()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isMatchingEnumFieldValue().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isMatchingEnumFieldValue().state"}, {"attr": {"type": "method", "name": "isEnumConstantMatchingFlagName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName()"}, {"attr": {"type": "parameter", "name": "enumName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName().enumName"}, {"attr": {"type": "parameter", "name": "classSymbol", "nullable": true}, "id": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName().classSymbol"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName().state"}, {"attr": {"type": "method", "name": "isSymbolAndMatchesFlagName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isSymbolAndMatchesFlagName()"}, {"attr": {"type": "parameter", "name": "argSym", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isSymbolAndMatchesFlagName().argSym"}, {"attr": {"type": "method", "name": "isVarSymbolAndMatchesFlagName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isVarSymbolAndMatchesFlagName()"}, {"attr": {"type": "parameter", "name": "argSym", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isVarSymbolAndMatchesFlagName().argSym"}, {"attr": {"type": "method", "name": "isLiteralTreeAndMatchesFlagName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isLiteralTreeAndMatchesFlagName()"}, {"attr": {"type": "parameter", "name": "arg", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isLiteralTreeAndMatchesFlagName().arg"}, {"attr": {"type": "method", "name": "stripBraces", "nullable": false}, "id": "src8845.java.XPFlagCleaner.stripBraces()"}, {"attr": {"type": "parameter", "name": "s", "nullable": false}, "id": "src8845.java.XPFlagCleaner.stripBraces().s"}, {"attr": {"type": "method", "name": "overLaps", "nullable": false}, "id": "src8845.java.XPFlagCleaner.overLaps()"}, {"attr": {"type": "parameter", "name": "t", "nullable": false}, "id": "src8845.java.XPFlagCleaner.overLaps().t"}, {"attr": {"type": "parameter", "name": "visitorState", "nullable": false}, "id": "src8845.java.XPFlagCleaner.overLaps().visitorState"}, {"attr": {"type": "method", "name": "evalExpr", "nullable": false}, "id": "src8845.java.XPFlagCleaner.evalExpr()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.evalExpr().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.evalExpr().state"}, {"attr": {"type": "method", "name": "evalTreatmentGroupCheck", "nullable": false}, "id": "src8845.java.XPFlagCleaner.evalTreatmentGroupCheck()"}, {"attr": {"type": "parameter", "name": "methodInvocationTree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.evalTreatmentGroupCheck().methodInvocationTree"}, {"attr": {"type": "method", "name": "updateCode", "nullable": false}, "id": "src8845.java.XPFlagCleaner.updateCode()"}, {"attr": {"type": "parameter", "name": "v", "nullable": false}, "id": "src8845.java.XPFlagCleaner.updateCode().v"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.updateCode().tree"}, {"attr": {"type": "parameter", "name": "expr", "nullable": false}, "id": "src8845.java.XPFlagCleaner.updateCode().expr"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.updateCode().state"}, {"attr": {"type": "method", "name": "handleSpecificAPIPatterns", "nullable": false}, "id": "src8845.java.XPFlagCleaner.handleSpecificAPIPatterns()"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.handleSpecificAPIPatterns().state"}, {"attr": {"type": "method", "name": "isTreatmentGroupEnum", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isTreatmentGroupEnum()"}, {"attr": {"type": "parameter", "name": "enumSym", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isTreatmentGroupEnum().enumSym"}, {"attr": {"type": "method", "name": "matchClass", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchClass()"}, {"attr": {"type": "parameter", "name": "classTree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchClass().classTree"}, {"attr": {"type": "parameter", "name": "visitorState", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchClass().visitorState"}, {"attr": {"type": "method", "name": "matchImport", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchImport()"}, {"attr": {"type": "parameter", "name": "importTree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchImport().importTree"}, {"attr": {"type": "parameter", "name": "visitorState", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchImport().visitorState"}, {"attr": {"type": "method", "name": "matchAssignment", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchAssignment()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchAssignment().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchAssignment().state"}, {"attr": {"type": "method", "name": "matchUnary", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchUnary()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchUnary().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchUnary().state"}, {"attr": {"type": "method", "name": "matchMethodInvocation", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchMethodInvocation()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchMethodInvocation().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchMethodInvocation().state"}, {"attr": {"type": "method", "name": "matchBinary", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchBinary()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchBinary().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchBinary().state"}, {"attr": {"type": "method", "name": "matchExpressionStatement", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchExpressionStatement()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchExpressionStatement().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchExpressionStatement().state"}, {"attr": {"type": "method", "name": "matchReturn", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchReturn()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchReturn().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchReturn().state"}, {"attr": {"type": "method", "name": "matchVariable", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchVariable()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchVariable().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchVariable().state"}, {"attr": {"type": "method", "name": "getEnumConstants", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getEnumConstants()"}, {"attr": {"type": "parameter", "name": "enumClassTree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getEnumConstants().enumClassTree"}, {"attr": {"type": "method", "name": "isOnlyEnumConstant", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isOnlyEnumConstant()"}, {"attr": {"type": "parameter", "name": "enumSym", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isOnlyEnumConstant().enumSym"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isOnlyEnumConstant().state"}, {"attr": {"type": "method", "name": "getEndingOfLastEnumConstantIfRemoved", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getEndingOfLastEnumConstantIfRemoved()"}, {"attr": {"type": "parameter", "name": "enumSym", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getEndingOfLastEnumConstantIfRemoved().enumSym"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getEndingOfLastEnumConstantIfRemoved().state"}, {"attr": {"type": "method", "name": "removeEnumValue", "nullable": false}, "id": "src8845.java.XPFlagCleaner.removeEnumValue()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.removeEnumValue().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.removeEnumValue().state"}, {"attr": {"type": "parameter", "name": "varName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.removeEnumValue().varName"}, {"attr": {"type": "parameter", "name": "isSingleEnumConstant", "nullable": false}, "id": "src8845.java.XPFlagCleaner.removeEnumValue().isSingleEnumConstant"}, {"attr": {"type": "method", "name": "recursiveScanTestMethodStats", "nullable": false}, "id": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats()"}, {"attr": {"type": "parameter", "name": "blockTree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats().blockTree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats().state"}, {"attr": {"type": "parameter", "name": "counters", "nullable": false}, "id": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats().counters"}, {"attr": {"type": "parameter", "name": "depth", "nullable": false}, "id": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats().depth"}, {"attr": {"type": "method", "name": "shouldCleanBySetters", "nullable": false}, "id": "src8845.java.XPFlagCleaner.shouldCleanBySetters()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.shouldCleanBySetters().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.shouldCleanBySetters().state"}, {"attr": {"type": "method", "name": "matchMethod", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchMethod()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchMethod().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchMethod().state"}, {"attr": {"type": "method", "name": "matchConditionalExpression", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchConditionalExpression()"}, {"attr": {"type": "parameter", "name": "tree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchConditionalExpression().tree"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchConditionalExpression().state"}, {"attr": {"type": "method", "name": "matchIf", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchIf()"}, {"attr": {"type": "parameter", "name": "ifTree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchIf().ifTree"}, {"attr": {"type": "parameter", "name": "visitorState", "nullable": false}, "id": "src8845.java.XPFlagCleaner.matchIf().visitorState"}, {"attr": {"type": "method", "name": "endsWithReturn", "nullable": false}, "id": "src8845.java.XPFlagCleaner.endsWithReturn()"}, {"attr": {"type": "parameter", "name": "stmt", "nullable": false}, "id": "src8845.java.XPFlagCleaner.endsWithReturn().stmt"}, {"attr": {"type": "method", "name": "deleteExprWithComma", "nullable": false}, "id": "src8845.java.XPFlagCleaner.deleteExprWithComma()"}, {"attr": {"type": "parameter", "name": "state", "nullable": false}, "id": "src8845.java.XPFlagCleaner.deleteExprWithComma().state"}, {"attr": {"type": "parameter", "name": "expressionTree", "nullable": false}, "id": "src8845.java.XPFlagCleaner.deleteExprWithComma().expressionTree"}, {"attr": {"type": "parameter", "name": "resolvedTestAnnotations", "nullable": false}, "id": "src8845.java.XPFlagCleaner.deleteExprWithComma().resolvedTestAnnotations"}, {"attr": {"type": "parameter", "name": "fixBuilder", "nullable": false}, "id": "src8845.java.XPFlagCleaner.deleteExprWithComma().fixBuilder"}, {"attr": {"type": "method", "name": "getLower", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getLower()"}, {"attr": {"type": "parameter", "name": "source", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getLower().source"}, {"attr": {"type": "parameter", "name": "lower", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getLower().lower"}, {"attr": {"type": "parameter", "name": "index", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getLower().index"}, {"attr": {"type": "parameter", "name": "flagSize", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getLower().flagSize"}, {"attr": {"type": "method", "name": "getUpper", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getUpper()"}, {"attr": {"type": "parameter", "name": "source", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getUpper().source"}, {"attr": {"type": "parameter", "name": "upper", "nullable": false}, "id": "src8845.java.XPFlagCleaner.getUpper().upper"}, {"attr": {"type": "field", "name": "COMMON_GROUP_NAMES", "nullable": false}, "id": "src8845.java.XPFlagCleaner.COMMON_GROUP_NAMES"}, {"attr": {"type": "field", "name": "DONTCARE", "nullable": false}, "id": "src8845.java.XPFlagCleaner.DONTCARE"}, {"attr": {"type": "field", "name": "TRUE", "nullable": false}, "id": "src8845.java.XPFlagCleaner.TRUE"}, {"attr": {"type": "field", "name": "FALSE", "nullable": false}, "id": "src8845.java.XPFlagCleaner.FALSE"}, {"attr": {"type": "field", "name": "EMPTY", "nullable": false}, "id": "src8845.java.XPFlagCleaner.EMPTY"}, {"attr": {"type": "field", "name": "initialized", "nullable": false}, "id": "src8845.java.XPFlagCleaner.initialized"}, {"attr": {"type": "field", "name": "disabled", "nullable": false}, "id": "src8845.java.XPFlagCleaner.disabled"}, {"attr": {"type": "field", "name": "flags", "nullable": true}, "id": "src8845.java.XPFlagCleaner.flags"}, {"attr": {"type": "field", "name": "xpFlagName", "nullable": false}, "id": "src8845.java.XPFlagCleaner.xpFlagName"}, {"attr": {"type": "field", "name": "xpSym", "nullable": true}, "id": "src8845.java.XPFlagCleaner.xpSym"}, {"attr": {"type": "field", "name": "isTreated", "nullable": false}, "id": "src8845.java.XPFlagCleaner.isTreated"}, {"attr": {"type": "field", "name": "treatmentGroup", "nullable": false}, "id": "src8845.java.XPFlagCleaner.treatmentGroup"}, {"attr": {"type": "field", "name": "treatmentGroupsEnum", "nullable": true}, "id": "src8845.java.XPFlagCleaner.treatmentGroupsEnum"}, {"attr": {"type": "field", "name": "enumsMatchingConstructorArgsCache", "nullable": false}, "id": "src8845.java.XPFlagCleaner.enumsMatchingConstructorArgsCache"}, {"attr": {"type": "field", "name": "endPos", "nullable": false}, "id": "src8845.java.XPFlagCleaner.endPos"}, {"attr": {"type": "field", "name": "config", "nullable": false}, "id": "src8845.java.XPFlagCleaner.config"}, {"attr": {"type": "field", "name": "cuPath", "nullable": true}, "id": "src8845.java.XPFlagCleaner.cuPath"}, {"attr": {"type": "field", "name": "countsCollected", "nullable": false}, "id": "src8845.java.XPFlagCleaner.countsCollected"}, {"attr": {"type": "field", "name": "usageCounts", "nullable": true}, "id": "src8845.java.XPFlagCleaner.usageCounts"}, {"attr": {"type": "field", "name": "deletedUsages", "nullable": true}, "id": "src8845.java.XPFlagCleaner.deletedUsages"}, {"attr": {"type": "field", "name": "skipWithinPath", "nullable": true}, "id": "src8845.java.XPFlagCleaner.skipWithinPath"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_161_45"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_183_36"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_188_40"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_208_39"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_211_82"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_212_58"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_216_47"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_270_31"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_341_21"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_342_23"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_499_24"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_516_26"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_548_22"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_559_31"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_571_46"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_605_17"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_690_23"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_726_25"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_727_28"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_799_40"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_804_74"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_882_37"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_883_39"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_904_27"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_954_15"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_989_23"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_995_30"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_996_42"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1006_16"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1023_16"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1044_12"}, {"id": "src8845.java.IGNORE"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1072_26"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1089_26"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1121_35"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1121_66"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1166_22"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1371_36"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1408_30"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1428_30"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1435_30"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src8845.java.null_1452_30"}], "links": [{"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.init()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.shouldSkip()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.skipWithin()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.computeSymbolCounts()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.decrementSymbolUsage()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchCompilationUnit()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.linkUrl()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.getXPAPI()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.methodRecordMatcher()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.enumConstructorArgsContainsFlagNameMatcher()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagMethod()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagName()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isMatchingEnumFieldValue()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isSymbolAndMatchesFlagName()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isVarSymbolAndMatchesFlagName()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isLiteralTreeAndMatchesFlagName()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.stripBraces()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.overLaps()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.evalExpr()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.evalTreatmentGroupCheck()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.updateCode()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.handleSpecificAPIPatterns()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isTreatmentGroupEnum()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchClass()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchImport()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchAssignment()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchUnary()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchMethodInvocation()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchBinary()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchExpressionStatement()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchReturn()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchVariable()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.getEnumConstants()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isOnlyEnumConstant()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.getEndingOfLastEnumConstantIfRemoved()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.removeEnumValue()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.shouldCleanBySetters()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchMethod()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchConditionalExpression()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.matchIf()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.endsWithReturn()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.deleteExprWithComma()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.getLower()"}, {"type": "contains", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.getUpper()"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.COMMON_GROUP_NAMES"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.DONTCARE"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.TRUE"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.FALSE"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.EMPTY"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.initialized"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.disabled"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.flags"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.xpFlagName"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.xpSym"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.isTreated"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.treatmentGroup"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.treatmentGroupsEnum"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.enumsMatchingConstructorArgsCache"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.endPos"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.config"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.cuPath"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.countsCollected"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.usageCounts"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.deletedUsages"}, {"type": "has_field", "source": "src8845.java.XPFlagCleaner", "target": "src8845.java.XPFlagCleaner.skipWithinPath"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.init()", "target": "src8845.java.XPFlagCleaner.init().flags"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.shouldSkip()", "target": "src8845.java.XPFlagCleaner.shouldSkip().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.skipWithin()", "target": "src8845.java.XPFlagCleaner.skipWithin().path"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.computeSymbolCounts()", "target": "src8845.java.XPFlagCleaner.computeSymbolCounts().visitorState"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.decrementSymbolUsage()", "target": "src8845.java.XPFlagCleaner.decrementSymbolUsage().symbol"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.decrementSymbolUsage()", "target": "src8845.java.XPFlagCleaner.decrementSymbolUsage().visitorState"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.decrementSymbolUsage()", "target": "src8845.java.XPFlagCleaner.decrementSymbolUsage().builder"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages()", "target": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages()", "target": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages().visitorState"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages()", "target": "src8845.java.XPFlagCleaner.decrementAllSymbolUsages().builder"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchCompilationUnit()", "target": "src8845.java.XPFlagCleaner.matchCompilationUnit().compilationUnitTree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchCompilationUnit()", "target": "src8845.java.XPFlagCleaner.matchCompilationUnit().visitorState"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getXPAPI()", "target": "src8845.java.XPFlagCleaner.getXPAPI().et"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getXPAPI()", "target": "src8845.java.XPFlagCleaner.getXPAPI().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getXPAPI()", "target": "src8845.java.XPFlagCleaner.getXPAPI().mit"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getXPAPI()", "target": "src8845.java.XPFlagCleaner.getXPAPI().methodRecordsForName"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.methodRecordMatcher()", "target": "src8845.java.XPFlagCleaner.methodRecordMatcher().methodRecord"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.methodRecordMatcher()", "target": "src8845.java.XPFlagCleaner.methodRecordMatcher().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.methodRecordMatcher()", "target": "src8845.java.XPFlagCleaner.methodRecordMatcher().mit"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.enumConstructorArgsContainsFlagNameMatcher()", "target": "src8845.java.XPFlagCleaner.enumConstructorArgsContainsFlagNameMatcher().enumRecords"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagMethod()", "target": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagMethod().arg"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagName()", "target": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagName().arg"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagName()", "target": "src8845.java.XPFlagCleaner.isArgumentMatchesFlagName().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isMatchingEnumFieldValue()", "target": "src8845.java.XPFlagCleaner.isMatchingEnumFieldValue().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isMatchingEnumFieldValue()", "target": "src8845.java.XPFlagCleaner.isMatchingEnumFieldValue().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName()", "target": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName().enumName"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName()", "target": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName().classSymbol"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName()", "target": "src8845.java.XPFlagCleaner.isEnumConstantMatchingFlagName().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isSymbolAndMatchesFlagName()", "target": "src8845.java.XPFlagCleaner.isSymbolAndMatchesFlagName().argSym"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isVarSymbolAndMatchesFlagName()", "target": "src8845.java.XPFlagCleaner.isVarSymbolAndMatchesFlagName().argSym"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isLiteralTreeAndMatchesFlagName()", "target": "src8845.java.XPFlagCleaner.isLiteralTreeAndMatchesFlagName().arg"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.stripBraces()", "target": "src8845.java.XPFlagCleaner.stripBraces().s"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.overLaps()", "target": "src8845.java.XPFlagCleaner.overLaps().t"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.overLaps()", "target": "src8845.java.XPFlagCleaner.overLaps().visitorState"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.evalExpr()", "target": "src8845.java.XPFlagCleaner.evalExpr().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.evalExpr()", "target": "src8845.java.XPFlagCleaner.evalExpr().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.evalTreatmentGroupCheck()", "target": "src8845.java.XPFlagCleaner.evalTreatmentGroupCheck().methodInvocationTree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.updateCode()", "target": "src8845.java.XPFlagCleaner.updateCode().v"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.updateCode()", "target": "src8845.java.XPFlagCleaner.updateCode().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.updateCode()", "target": "src8845.java.XPFlagCleaner.updateCode().expr"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.updateCode()", "target": "src8845.java.XPFlagCleaner.updateCode().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.handleSpecificAPIPatterns()", "target": "src8845.java.XPFlagCleaner.handleSpecificAPIPatterns().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isTreatmentGroupEnum()", "target": "src8845.java.XPFlagCleaner.isTreatmentGroupEnum().enumSym"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchClass()", "target": "src8845.java.XPFlagCleaner.matchClass().classTree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchClass()", "target": "src8845.java.XPFlagCleaner.matchClass().visitorState"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchImport()", "target": "src8845.java.XPFlagCleaner.matchImport().importTree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchImport()", "target": "src8845.java.XPFlagCleaner.matchImport().visitorState"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchAssignment()", "target": "src8845.java.XPFlagCleaner.matchAssignment().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchAssignment()", "target": "src8845.java.XPFlagCleaner.matchAssignment().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchUnary()", "target": "src8845.java.XPFlagCleaner.matchUnary().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchUnary()", "target": "src8845.java.XPFlagCleaner.matchUnary().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchMethodInvocation()", "target": "src8845.java.XPFlagCleaner.matchMethodInvocation().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchMethodInvocation()", "target": "src8845.java.XPFlagCleaner.matchMethodInvocation().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchBinary()", "target": "src8845.java.XPFlagCleaner.matchBinary().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchBinary()", "target": "src8845.java.XPFlagCleaner.matchBinary().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchExpressionStatement()", "target": "src8845.java.XPFlagCleaner.matchExpressionStatement().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchExpressionStatement()", "target": "src8845.java.XPFlagCleaner.matchExpressionStatement().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchReturn()", "target": "src8845.java.XPFlagCleaner.matchReturn().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchReturn()", "target": "src8845.java.XPFlagCleaner.matchReturn().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchVariable()", "target": "src8845.java.XPFlagCleaner.matchVariable().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchVariable()", "target": "src8845.java.XPFlagCleaner.matchVariable().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getEnumConstants()", "target": "src8845.java.XPFlagCleaner.getEnumConstants().enumClassTree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isOnlyEnumConstant()", "target": "src8845.java.XPFlagCleaner.isOnlyEnumConstant().enumSym"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.isOnlyEnumConstant()", "target": "src8845.java.XPFlagCleaner.isOnlyEnumConstant().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getEndingOfLastEnumConstantIfRemoved()", "target": "src8845.java.XPFlagCleaner.getEndingOfLastEnumConstantIfRemoved().enumSym"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getEndingOfLastEnumConstantIfRemoved()", "target": "src8845.java.XPFlagCleaner.getEndingOfLastEnumConstantIfRemoved().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.removeEnumValue()", "target": "src8845.java.XPFlagCleaner.removeEnumValue().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.removeEnumValue()", "target": "src8845.java.XPFlagCleaner.removeEnumValue().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.removeEnumValue()", "target": "src8845.java.XPFlagCleaner.removeEnumValue().varName"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.removeEnumValue()", "target": "src8845.java.XPFlagCleaner.removeEnumValue().isSingleEnumConstant"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats()", "target": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats().blockTree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats()", "target": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats()", "target": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats().counters"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats()", "target": "src8845.java.XPFlagCleaner.recursiveScanTestMethodStats().depth"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.shouldCleanBySetters()", "target": "src8845.java.XPFlagCleaner.shouldCleanBySetters().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.shouldCleanBySetters()", "target": "src8845.java.XPFlagCleaner.shouldCleanBySetters().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchMethod()", "target": "src8845.java.XPFlagCleaner.matchMethod().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchMethod()", "target": "src8845.java.XPFlagCleaner.matchMethod().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchConditionalExpression()", "target": "src8845.java.XPFlagCleaner.matchConditionalExpression().tree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchConditionalExpression()", "target": "src8845.java.XPFlagCleaner.matchConditionalExpression().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchIf()", "target": "src8845.java.XPFlagCleaner.matchIf().ifTree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.matchIf()", "target": "src8845.java.XPFlagCleaner.matchIf().visitorState"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.endsWithReturn()", "target": "src8845.java.XPFlagCleaner.endsWithReturn().stmt"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.deleteExprWithComma()", "target": "src8845.java.XPFlagCleaner.deleteExprWithComma().state"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.deleteExprWithComma()", "target": "src8845.java.XPFlagCleaner.deleteExprWithComma().expressionTree"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.deleteExprWithComma()", "target": "src8845.java.XPFlagCleaner.deleteExprWithComma().resolvedTestAnnotations"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.deleteExprWithComma()", "target": "src8845.java.XPFlagCleaner.deleteExprWithComma().fixBuilder"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getLower()", "target": "src8845.java.XPFlagCleaner.getLower().source"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getLower()", "target": "src8845.java.XPFlagCleaner.getLower().lower"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getLower()", "target": "src8845.java.XPFlagCleaner.getLower().index"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getLower()", "target": "src8845.java.XPFlagCleaner.getLower().flagSize"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getUpper()", "target": "src8845.java.XPFlagCleaner.getUpper().source"}, {"type": "has_parameter", "source": "src8845.java.XPFlagCleaner.getUpper()", "target": "src8845.java.XPFlagCleaner.getUpper().upper"}, {"type": "contains", "source": "src8845.java.IGNORE", "target": "src8845.java.null_1044_12"}]}