{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "ErrorStateDrmSession", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession"}, {"attr": {"type": "method", "name": "getState", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession.getState()"}, {"attr": {"type": "method", "name": "playClearSamplesWithoutKeys", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession.playClearSamplesWithoutKeys()"}, {"attr": {"type": "method", "name": "getError", "nullable": true}, "id": "src5485.java.ErrorStateDrmSession.getError()"}, {"attr": {"type": "method", "name": "getSchemeUuid", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession.getSchemeUuid()"}, {"attr": {"type": "method", "name": "getCryptoConfig", "nullable": true}, "id": "src5485.java.ErrorStateDrmSession.getCryptoConfig()"}, {"attr": {"type": "method", "name": "queryKeyStatus", "nullable": true}, "id": "src5485.java.ErrorStateDrmSession.queryKeyStatus()"}, {"attr": {"type": "method", "name": "getOfflineLicenseKeySetId", "nullable": true}, "id": "src5485.java.ErrorStateDrmSession.getOfflineLicenseKeySetId()"}, {"attr": {"type": "method", "name": "requiresSecureDecoder", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession.requiresSecureDecoder()"}, {"attr": {"type": "parameter", "name": "mimeType", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession.requiresSecureDecoder().mimeType"}, {"attr": {"type": "method", "name": "acquire", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession.acquire()"}, {"attr": {"type": "parameter", "name": "eventDispatcher", "nullable": true}, "id": "src5485.java.ErrorStateDrmSession.acquire().eventDispatcher"}, {"attr": {"type": "method", "name": "release", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession.release()"}, {"attr": {"type": "parameter", "name": "eventDispatcher", "nullable": true}, "id": "src5485.java.ErrorStateDrmSession.release().eventDispatcher"}, {"attr": {"type": "field", "name": "error", "nullable": false}, "id": "src5485.java.ErrorStateDrmSession.error"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src5485.java.null_66_12"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src5485.java.null_72_12"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src5485.java.null_78_12"}], "links": [{"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.getState()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.playClearSamplesWithoutKeys()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.getError()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.getSchemeUuid()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.getCryptoConfig()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.queryKeyStatus()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.getOfflineLicenseKeySetId()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.requiresSecureDecoder()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.acquire()"}, {"type": "contains", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.release()"}, {"type": "has_field", "source": "src5485.java.ErrorStateDrmSession", "target": "src5485.java.ErrorStateDrmSession.error"}, {"type": "has_parameter", "source": "src5485.java.ErrorStateDrmSession.requiresSecureDecoder()", "target": "src5485.java.ErrorStateDrmSession.requiresSecureDecoder().mimeType"}, {"type": "has_parameter", "source": "src5485.java.ErrorStateDrmSession.acquire()", "target": "src5485.java.ErrorStateDrmSession.acquire().eventDispatcher"}, {"type": "has_parameter", "source": "src5485.java.ErrorStateDrmSession.release()", "target": "src5485.java.ErrorStateDrmSession.release().eventDispatcher"}]}