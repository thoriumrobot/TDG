{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "PyControlFlowBuilderTest", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest"}, {"attr": {"type": "method", "name": "getProjectDescriptor", "nullable": true}, "id": "src9340.java.PyControlFlowBuilderTest.getProjectDescriptor()"}, {"attr": {"type": "method", "name": "getTestDataPath", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.getTestDataPath()"}, {"attr": {"type": "method", "name": "doTest", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.doTest()"}, {"attr": {"type": "method", "name": "testAssert", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAssert()"}, {"attr": {"type": "method", "name": "testAssertFalse", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAssertFalse()"}, {"attr": {"type": "method", "name": "testFile", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testFile()"}, {"attr": {"type": "method", "name": "testIf", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testIf()"}, {"attr": {"type": "method", "name": "testFor", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testFor()"}, {"attr": {"type": "method", "name": "testWhile", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testWhile()"}, {"attr": {"type": "method", "name": "testBreak", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testBreak()"}, {"attr": {"type": "method", "name": "testContinue", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testContinue()"}, {"attr": {"type": "method", "name": "testReturn", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testReturn()"}, {"attr": {"type": "method", "name": "testTry", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTry()"}, {"attr": {"type": "method", "name": "testImport", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testImport()"}, {"attr": {"type": "method", "name": "testListComp", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testListComp()"}, {"attr": {"type": "method", "name": "testAssignment", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAssignment()"}, {"attr": {"type": "method", "name": "testAssignment2", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAssignment2()"}, {"attr": {"type": "method", "name": "testAugAssignment", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAugAssignment()"}, {"attr": {"type": "method", "name": "testSliceAssignment", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testSliceAssignment()"}, {"attr": {"type": "method", "name": "testIfElseReturn", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testIfElseReturn()"}, {"attr": {"type": "method", "name": "testRaise", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testRaise()"}, {"attr": {"type": "method", "name": "testReturnFor", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testReturnFor()"}, {"attr": {"type": "method", "name": "testForIf", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testForIf()"}, {"attr": {"type": "method", "name": "testForReturn", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testForReturn()"}, {"attr": {"type": "method", "name": "testForTryContinue", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testForTryContinue()"}, {"attr": {"type": "method", "name": "testTryRaiseFinally", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTryRaiseFinally()"}, {"attr": {"type": "method", "name": "testTryExceptElseFinally", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTryExceptElseFinally()"}, {"attr": {"type": "method", "name": "testTryFinally", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTryFinally()"}, {"attr": {"type": "method", "name": "testDoubleTry", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testDoubleTry()"}, {"attr": {"type": "method", "name": "testTryTry", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTryTry()"}, {"attr": {"type": "method", "name": "testIsinstance", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testIsinstance()"}, {"attr": {"type": "method", "name": "testLambda", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testLambda()"}, {"attr": {"type": "method", "name": "testManyIfs", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testManyIfs()"}, {"attr": {"type": "method", "name": "testSuperclass", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testSuperclass()"}, {"attr": {"type": "method", "name": "testDefaultParameterValue", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testDefaultParameterValue()"}, {"attr": {"type": "method", "name": "testLambdaDefaultParameter", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testLambdaDefaultParameter()"}, {"attr": {"type": "method", "name": "testDecorator", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testDecorator()"}, {"attr": {"type": "method", "name": "testSetComprehension", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testSetComprehension()"}, {"attr": {"type": "method", "name": "testTypeAnnotations", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTypeAnnotations()"}, {"attr": {"type": "method", "name": "testQualifiedSelfReference", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testQualifiedSelfReference()"}, {"attr": {"type": "method", "name": "testSelf", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testSelf()"}, {"attr": {"type": "method", "name": "testTryBreak", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTryBreak()"}, {"attr": {"type": "method", "name": "testFunction", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testFunction()"}, {"attr": {"type": "method", "name": "testAssertFalseArgument", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAssertFalseArgument()"}, {"attr": {"type": "method", "name": "testConditionalExpression", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testConditionalExpression()"}, {"attr": {"type": "method", "name": "testVariableAnnotations", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testVariableAnnotations()"}, {"attr": {"type": "method", "name": "testImplicitNegativeTypeAssertionAfterIf", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testImplicitNegativeTypeAssertionAfterIf()"}, {"attr": {"type": "method", "name": "testImplicitNegativeTypeAssertionAfterTwoNestedIf", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testImplicitNegativeTypeAssertionAfterTwoNestedIf()"}, {"attr": {"type": "method", "name": "testTypesInAndBooleanExpression", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTypesInAndBooleanExpression()"}, {"attr": {"type": "method", "name": "testTypesInOrBooleanExpression", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testTypesInOrBooleanExpression()"}, {"attr": {"type": "method", "name": "testAndBooleanExpression", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAndBooleanExpression()"}, {"attr": {"type": "method", "name": "testOrBooleanExpression", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testOrBooleanExpression()"}, {"attr": {"type": "method", "name": "testPositiveIteration", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testPositiveIteration()"}, {"attr": {"type": "method", "name": "testIfFalse", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testIfFalse()"}, {"attr": {"type": "method", "name": "testIfTrue", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testIfTrue()"}, {"attr": {"type": "method", "name": "testIfElifTrue", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testIfElifTrue()"}, {"attr": {"type": "method", "name": "testIfElifFalse", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testIfElifFalse()"}, {"attr": {"type": "method", "name": "testWhileTrueElse", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testWhileTrueElse()"}, {"attr": {"type": "method", "name": "testWithRaiseException", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testWithRaiseException()"}, {"attr": {"type": "method", "name": "testContinueInPositiveIteration", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testContinueInPositiveIteration()"}, {"attr": {"type": "method", "name": "testAssignmentExpression", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAssignmentExpression()"}, {"attr": {"type": "method", "name": "testDelete", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testDelete()"}, {"attr": {"type": "method", "name": "testDeleteSubscriptionAndSlice", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testDeleteSubscriptionAndSlice()"}, {"attr": {"type": "method", "name": "testAssignmentExpressionInsideBinaryInWhile", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAssignmentExpressionInsideBinaryInWhile()"}, {"attr": {"type": "method", "name": "testAssignmentExpressionInsideBinaryInWhileElse", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testAssignmentExpressionInsideBinaryInWhileElse()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseCapturePattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseCapturePattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseWildcardPattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseWildcardPattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseLiteralPattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseLiteralPattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseBindingSequencePattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseBindingSequencePattern()"}, {"attr": {"type": "method", "name": "testMatchStatementTwoClausesCapturePatternFirst", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementTwoClausesCapturePatternFirst()"}, {"attr": {"type": "method", "name": "testMatchStatementTwoClausesCapturePatternLast", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementTwoClausesCapturePatternLast()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseAliasedRefutableOrPattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseAliasedRefutableOrPattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseRefutableOrPattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseRefutableOrPattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseIrrefutableOrPatternCaptureVariantFirst", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseIrrefutableOrPatternCaptureVariantFirst()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseIrrefutableOrPatternCaptureVariantLast", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseIrrefutableOrPatternCaptureVariantLast()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseRefutableOrPatternWithNonBindingVariants", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseRefutableOrPatternWithNonBindingVariants()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseRefutableOrPatternWithWildcard", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseRefutableOrPatternWithWildcard()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseSequencePatternWithSingleOrPattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseSequencePatternWithSingleOrPattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseNestedOrPatterns", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseNestedOrPatterns()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseClassPattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseClassPattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseMappingPattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseMappingPattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseSequencePattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseSequencePattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseParenthesizedCapturePattern", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseParenthesizedCapturePattern()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseNamedSingleStarPatternIsIrrefutable", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseNamedSingleStarPatternIsIrrefutable()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseWildcardSingleStarPatternIsIrrefutable", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseWildcardSingleStarPatternIsIrrefutable()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseDoubleStarPatternIsIrrefutable", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseDoubleStarPatternIsIrrefutable()"}, {"attr": {"type": "method", "name": "testMatchStatementClauseWithBreak", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementClauseWithBreak()"}, {"attr": {"type": "method", "name": "testMatchStatementClauseWithContinue", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementClauseWithContinue()"}, {"attr": {"type": "method", "name": "testMatchStatementClauseWithReturn", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementClauseWithReturn()"}, {"attr": {"type": "method", "name": "testMatchStatementNestedMatchStatementLastInClause", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementNestedMatchStatementLastInClause()"}, {"attr": {"type": "method", "name": "testMatchStatementNestedMatchStatement", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementNestedMatchStatement()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseTrivialGuard", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseTrivialGuard()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseDisjunctionGuard", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseDisjunctionGuard()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseConjunctionGuard", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseConjunctionGuard()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseDisjunctionConjunctionGuard", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseDisjunctionConjunctionGuard()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseRefutablePatternAndConjunctionGuard", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseRefutablePatternAndConjunctionGuard()"}, {"attr": {"type": "method", "name": "testMatchStatementSingleClauseGuardWithNonTopLevelDisjunction", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseGuardWithNonTopLevelDisjunction()"}, {"attr": {"type": "method", "name": "testControlFlowIsAbruptAfterExit", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testControlFlowIsAbruptAfterExit()"}, {"attr": {"type": "method", "name": "testControlFlowIsAbruptAfterSysExit", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testControlFlowIsAbruptAfterSysExit()"}, {"attr": {"type": "method", "name": "testControlFlowIsAbruptAfterSelfFail", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testControlFlowIsAbruptAfterSelfFail()"}, {"attr": {"type": "method", "name": "testControlFlowIsAbruptAfterNoReturn", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.testControlFlowIsAbruptAfterNoReturn()"}, {"attr": {"type": "method", "name": "doTestFirstStatement", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.doTestFirstStatement()"}, {"attr": {"type": "method", "name": "check", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.check()"}, {"attr": {"type": "parameter", "name": "fullPath", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.check().fullPath"}, {"attr": {"type": "parameter", "name": "flow", "nullable": false}, "id": "src9340.java.PyControlFlowBuilderTest.check().flow"}], "links": [{"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.getProjectDescriptor()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.getTestDataPath()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.doTest()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAssert()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAssertFalse()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testFile()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testIf()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testFor()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testWhile()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testBreak()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testContinue()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testReturn()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTry()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testImport()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testListComp()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAssignment()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAssignment2()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAugAssignment()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testSliceAssignment()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testIfElseReturn()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testRaise()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testReturnFor()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testForIf()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testForReturn()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testForTryContinue()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTryRaiseFinally()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTryExceptElseFinally()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTryFinally()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testDoubleTry()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTryTry()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testIsinstance()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testLambda()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testManyIfs()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testSuperclass()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testDefaultParameterValue()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testLambdaDefaultParameter()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testDecorator()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testSetComprehension()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTypeAnnotations()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testQualifiedSelfReference()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testSelf()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTryBreak()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testFunction()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAssertFalseArgument()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testConditionalExpression()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testVariableAnnotations()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testImplicitNegativeTypeAssertionAfterIf()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testImplicitNegativeTypeAssertionAfterTwoNestedIf()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTypesInAndBooleanExpression()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testTypesInOrBooleanExpression()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAndBooleanExpression()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testOrBooleanExpression()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testPositiveIteration()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testIfFalse()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testIfTrue()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testIfElifTrue()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testIfElifFalse()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testWhileTrueElse()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testWithRaiseException()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testContinueInPositiveIteration()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAssignmentExpression()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testDelete()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testDeleteSubscriptionAndSlice()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAssignmentExpressionInsideBinaryInWhile()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testAssignmentExpressionInsideBinaryInWhileElse()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseCapturePattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseWildcardPattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseLiteralPattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseBindingSequencePattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementTwoClausesCapturePatternFirst()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementTwoClausesCapturePatternLast()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseAliasedRefutableOrPattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseRefutableOrPattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseIrrefutableOrPatternCaptureVariantFirst()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseIrrefutableOrPatternCaptureVariantLast()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseRefutableOrPatternWithNonBindingVariants()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseRefutableOrPatternWithWildcard()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseSequencePatternWithSingleOrPattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseNestedOrPatterns()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseClassPattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseMappingPattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseSequencePattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseParenthesizedCapturePattern()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseNamedSingleStarPatternIsIrrefutable()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseWildcardSingleStarPatternIsIrrefutable()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseDoubleStarPatternIsIrrefutable()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementClauseWithBreak()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementClauseWithContinue()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementClauseWithReturn()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementNestedMatchStatementLastInClause()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementNestedMatchStatement()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseTrivialGuard()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseDisjunctionGuard()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseConjunctionGuard()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseDisjunctionConjunctionGuard()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseRefutablePatternAndConjunctionGuard()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testMatchStatementSingleClauseGuardWithNonTopLevelDisjunction()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testControlFlowIsAbruptAfterExit()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testControlFlowIsAbruptAfterSysExit()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testControlFlowIsAbruptAfterSelfFail()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.testControlFlowIsAbruptAfterNoReturn()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.doTestFirstStatement()"}, {"type": "contains", "source": "src9340.java.PyControlFlowBuilderTest", "target": "src9340.java.PyControlFlowBuilderTest.check()"}, {"type": "has_parameter", "source": "src9340.java.PyControlFlowBuilderTest.check()", "target": "src9340.java.PyControlFlowBuilderTest.check().fullPath"}, {"type": "has_parameter", "source": "src9340.java.PyControlFlowBuilderTest.check()", "target": "src9340.java.PyControlFlowBuilderTest.check().flow"}]}