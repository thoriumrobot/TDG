{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "file", "name": "src477.java", "nullable": false, "actual_type": null}, "id": "src477.java"}, {"attr": {"type": "class", "name": "MockTransactionContext", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext"}, {"attr": {"type": "method", "name": "sidecars", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.sidecars()"}, {"attr": {"type": "method", "name": "addSidecarRecord", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.addSidecarRecord()"}, {"attr": {"type": "parameter", "name": "sidecar", "nullable": false, "actual_type": "TransactionSidecarRecord"}, "id": "src477.java.MockTransactionContext.addSidecarRecord().sidecar"}, {"attr": {"type": "method", "name": "addFeeChargedToPayer", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.addFeeChargedToPayer()"}, {"attr": {"type": "parameter", "name": "amount", "nullable": false, "actual_type": "long"}, "id": "src477.java.MockTransactionContext.addFeeChargedToPayer().amount"}, {"attr": {"type": "method", "name": "resetFor", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.resetFor()"}, {"attr": {"type": "parameter", "name": "accessor", "nullable": true, "actual_type": "TxnAccessor"}, "id": "src477.java.MockTransactionContext.resetFor().accessor"}, {"attr": {"type": "parameter", "name": "consensusTime", "nullable": false, "actual_type": "Instant"}, "id": "src477.java.MockTransactionContext.resetFor().consensusTime"}, {"attr": {"type": "parameter", "name": "submittingMember", "nullable": false, "actual_type": "long"}, "id": "src477.java.MockTransactionContext.resetFor().submittingMember"}, {"attr": {"type": "method", "name": "isPayerSigKnownActive", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.isPayerSigKnownActive()"}, {"attr": {"type": "method", "name": "submittingNodeAccount", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.submittingNodeAccount()"}, {"attr": {"type": "method", "name": "submittingSwirldsMember", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.submittingSwirldsMember()"}, {"attr": {"type": "method", "name": "activePayer", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.activePayer()"}, {"attr": {"type": "method", "name": "activePayerKey", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.activePayerKey()"}, {"attr": {"type": "method", "name": "consensusTime", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.consensusTime()"}, {"attr": {"type": "method", "name": "status", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.status()"}, {"attr": {"type": "method", "name": "recordSoFar", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.recordSoFar()"}, {"attr": {"type": "method", "name": "accessor", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.accessor()"}, {"attr": {"type": "method", "name": "swirldsTxnAccessor", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.swirldsTxnAccessor()"}, {"attr": {"type": "method", "name": "setStatus", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setStatus()"}, {"attr": {"type": "parameter", "name": "status", "nullable": false, "actual_type": "ResponseCodeEnum"}, "id": "src477.java.MockTransactionContext.setStatus().status"}, {"attr": {"type": "method", "name": "setCreated", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setCreated()"}, {"attr": {"type": "parameter", "name": "id", "nullable": false, "actual_type": "ScheduleID"}, "id": "src477.java.MockTransactionContext.setCreated().id"}, {"attr": {"type": "method", "name": "setEvmAddress", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setEvmAddress()"}, {"attr": {"type": "parameter", "name": "evmAddress", "nullable": false, "actual_type": "ByteString"}, "id": "src477.java.MockTransactionContext.setEvmAddress().evmAddress"}, {"attr": {"type": "method", "name": "setTargetedContract", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setTargetedContract()"}, {"attr": {"type": "parameter", "name": "id", "nullable": false, "actual_type": "ContractID"}, "id": "src477.java.MockTransactionContext.setTargetedContract().id"}, {"attr": {"type": "method", "name": "setScheduledTxnId", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setScheduledTxnId()"}, {"attr": {"type": "parameter", "name": "txnId", "nullable": false, "actual_type": "TransactionID"}, "id": "src477.java.MockTransactionContext.setScheduledTxnId().txnId"}, {"attr": {"type": "method", "name": "setCallResult", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setCallResult()"}, {"attr": {"type": "parameter", "name": "result", "nullable": false, "actual_type": "EvmFnResult"}, "id": "src477.java.MockTransactionContext.setCallResult().result"}, {"attr": {"type": "method", "name": "updateForEvmCall", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.updateForEvmCall()"}, {"attr": {"type": "parameter", "name": "callContext", "nullable": false, "actual_type": "EthTxData"}, "id": "src477.java.MockTransactionContext.updateForEvmCall().callContext"}, {"attr": {"type": "parameter", "name": "senderId", "nullable": false, "actual_type": "EntityId"}, "id": "src477.java.MockTransactionContext.updateForEvmCall().senderId"}, {"attr": {"type": "method", "name": "setCreateResult", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setCreateResult()"}, {"attr": {"type": "parameter", "name": "result", "nullable": false, "actual_type": "EvmFnResult"}, "id": "src477.java.MockTransactionContext.setCreateResult().result"}, {"attr": {"type": "method", "name": "payerSigIsKnownActive", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.payerSigIsKnownActive()"}, {"attr": {"type": "method", "name": "setTopicRunningHash", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setTopicRunningHash()"}, {"attr": {"type": "parameter", "name": "runningHash", "nullable": false, "actual_type": "byte"}, "id": "src477.java.MockTransactionContext.setTopicRunningHash().runningHash"}, {"attr": {"type": "parameter", "name": "sequenceNumber", "nullable": false, "actual_type": "long"}, "id": "src477.java.MockTransactionContext.setTopicRunningHash().sequenceNumber"}, {"attr": {"type": "method", "name": "trigger", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.trigger()"}, {"attr": {"type": "parameter", "name": "accessor", "nullable": false, "actual_type": "TxnAccessor"}, "id": "src477.java.MockTransactionContext.trigger().accessor"}, {"attr": {"type": "method", "name": "triggeredTxn", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.triggeredTxn()"}, {"attr": {"type": "method", "name": "setAssessedCustomFees", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.setAssessedCustomFees()"}, {"attr": {"type": "parameter", "name": "assessedCustomFees", "nullable": false, "actual_type": "List"}, "id": "src477.java.MockTransactionContext.setAssessedCustomFees().assessedCustomFees"}, {"attr": {"type": "method", "name": "hasContractResult", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.hasContractResult()"}, {"attr": {"type": "method", "name": "getGasUsedForContractTxn", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.getGasUsedForContractTxn()"}, {"attr": {"type": "method", "name": "recordBeneficiaryOfDeleted", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.recordBeneficiaryOfDeleted()"}, {"attr": {"type": "parameter", "name": "accountNum", "nullable": false, "actual_type": "long"}, "id": "src477.java.MockTransactionContext.recordBeneficiaryOfDeleted().accountNum"}, {"attr": {"type": "parameter", "name": "beneficiaryNum", "nullable": false, "actual_type": "long"}, "id": "src477.java.MockTransactionContext.recordBeneficiaryOfDeleted().beneficiaryNum"}, {"attr": {"type": "method", "name": "getBeneficiaryOfDeleted", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.getBeneficiaryOfDeleted()"}, {"attr": {"type": "parameter", "name": "accountNum", "nullable": false, "actual_type": "long"}, "id": "src477.java.MockTransactionContext.getBeneficiaryOfDeleted().accountNum"}, {"attr": {"type": "method", "name": "numDeletedAccountsAndContracts", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.numDeletedAccountsAndContracts()"}, {"attr": {"type": "field", "name": "now", "nullable": false, "actual_type": null}, "id": "src477.java.MockTransactionContext.now"}], "links": [{"type": "contains", "source": "src477.java", "target": "src477.java.MockTransactionContext"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.sidecars()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.addSidecarRecord()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.addFeeChargedToPayer()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.resetFor()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.isPayerSigKnownActive()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.submittingNodeAccount()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.submittingSwirldsMember()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.activePayer()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.activePayerKey()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.consensusTime()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.status()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.recordSoFar()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.accessor()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.swirldsTxnAccessor()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setStatus()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setCreated()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setEvmAddress()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setTargetedContract()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setScheduledTxnId()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setCallResult()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.updateForEvmCall()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setCreateResult()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.payerSigIsKnownActive()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setTopicRunningHash()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.trigger()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.triggeredTxn()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.setAssessedCustomFees()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.hasContractResult()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.getGasUsedForContractTxn()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.recordBeneficiaryOfDeleted()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.getBeneficiaryOfDeleted()"}, {"type": "contains", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.numDeletedAccountsAndContracts()"}, {"type": "has_field", "source": "src477.java.MockTransactionContext", "target": "src477.java.MockTransactionContext.now"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.addSidecarRecord()", "target": "src477.java.MockTransactionContext.addSidecarRecord().sidecar"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.addFeeChargedToPayer()", "target": "src477.java.MockTransactionContext.addFeeChargedToPayer().amount"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.resetFor()", "target": "src477.java.MockTransactionContext.resetFor().accessor"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.resetFor()", "target": "src477.java.MockTransactionContext.resetFor().consensusTime"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.resetFor()", "target": "src477.java.MockTransactionContext.resetFor().submittingMember"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setStatus()", "target": "src477.java.MockTransactionContext.setStatus().status"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setCreated()", "target": "src477.java.MockTransactionContext.setCreated().id"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setEvmAddress()", "target": "src477.java.MockTransactionContext.setEvmAddress().evmAddress"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setTargetedContract()", "target": "src477.java.MockTransactionContext.setTargetedContract().id"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setScheduledTxnId()", "target": "src477.java.MockTransactionContext.setScheduledTxnId().txnId"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setCallResult()", "target": "src477.java.MockTransactionContext.setCallResult().result"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.updateForEvmCall()", "target": "src477.java.MockTransactionContext.updateForEvmCall().callContext"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.updateForEvmCall()", "target": "src477.java.MockTransactionContext.updateForEvmCall().senderId"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setCreateResult()", "target": "src477.java.MockTransactionContext.setCreateResult().result"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setTopicRunningHash()", "target": "src477.java.MockTransactionContext.setTopicRunningHash().runningHash"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setTopicRunningHash()", "target": "src477.java.MockTransactionContext.setTopicRunningHash().sequenceNumber"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.trigger()", "target": "src477.java.MockTransactionContext.trigger().accessor"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.setAssessedCustomFees()", "target": "src477.java.MockTransactionContext.setAssessedCustomFees().assessedCustomFees"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.recordBeneficiaryOfDeleted()", "target": "src477.java.MockTransactionContext.recordBeneficiaryOfDeleted().accountNum"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.recordBeneficiaryOfDeleted()", "target": "src477.java.MockTransactionContext.recordBeneficiaryOfDeleted().beneficiaryNum"}, {"type": "has_parameter", "source": "src477.java.MockTransactionContext.getBeneficiaryOfDeleted()", "target": "src477.java.MockTransactionContext.getBeneficiaryOfDeleted().accountNum"}]}