{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "ExceptionPassthroughInputStream", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream"}, {"attr": {"type": "method", "name": "obtain", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.obtain()"}, {"attr": {"type": "parameter", "name": "toWrap", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.obtain().toWrap"}, {"attr": {"type": "method", "name": "clearQueue", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.clearQueue()"}, {"attr": {"type": "method", "name": "setInputStream", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.setInputStream()"}, {"attr": {"type": "parameter", "name": "toWrap", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.setInputStream().toWrap"}, {"attr": {"type": "method", "name": "available", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.available()"}, {"attr": {"type": "method", "name": "close", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.close()"}, {"attr": {"type": "method", "name": "mark", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.mark()"}, {"attr": {"type": "parameter", "name": "readLimit", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.mark().readLimit"}, {"attr": {"type": "method", "name": "markSupported", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.markSupported()"}, {"attr": {"type": "method", "name": "read", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.read()"}, {"attr": {"type": "parameter", "name": "buffer", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.read().buffer"}, {"attr": {"type": "parameter", "name": "byteOffset", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.read().byteOffset"}, {"attr": {"type": "parameter", "name": "byteCount", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.read().byteCount"}, {"attr": {"type": "method", "name": "reset", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.reset()"}, {"attr": {"type": "method", "name": "skip", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.skip()"}, {"attr": {"type": "parameter", "name": "byteCount", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.skip().byteCount"}, {"attr": {"type": "method", "name": "getException", "nullable": true}, "id": "src5082.java.ExceptionPassthroughInputStream.getException()"}, {"attr": {"type": "method", "name": "release", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.release()"}, {"attr": {"type": "field", "name": "POOL", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.POOL"}, {"attr": {"type": "field", "name": "wrapped", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.wrapped"}, {"attr": {"type": "field", "name": "exception", "nullable": false}, "id": "src5082.java.ExceptionPassthroughInputStream.exception"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src5082.java.null_38_19"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src5082.java.null_133_17"}, {"attr": {"type": "literal", "name": "null", "nullable": false}, "id": "src5082.java.null_134_15"}], "links": [{"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.obtain()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.clearQueue()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.setInputStream()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.available()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.close()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.mark()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.markSupported()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.read()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.reset()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.skip()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.getException()"}, {"type": "contains", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.release()"}, {"type": "has_field", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.POOL"}, {"type": "has_field", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.wrapped"}, {"type": "has_field", "source": "src5082.java.ExceptionPassthroughInputStream", "target": "src5082.java.ExceptionPassthroughInputStream.exception"}, {"type": "has_parameter", "source": "src5082.java.ExceptionPassthroughInputStream.obtain()", "target": "src5082.java.ExceptionPassthroughInputStream.obtain().toWrap"}, {"type": "has_parameter", "source": "src5082.java.ExceptionPassthroughInputStream.setInputStream()", "target": "src5082.java.ExceptionPassthroughInputStream.setInputStream().toWrap"}, {"type": "has_parameter", "source": "src5082.java.ExceptionPassthroughInputStream.mark()", "target": "src5082.java.ExceptionPassthroughInputStream.mark().readLimit"}, {"type": "has_parameter", "source": "src5082.java.ExceptionPassthroughInputStream.read()", "target": "src5082.java.ExceptionPassthroughInputStream.read().buffer"}, {"type": "has_parameter", "source": "src5082.java.ExceptionPassthroughInputStream.read()", "target": "src5082.java.ExceptionPassthroughInputStream.read().byteOffset"}, {"type": "has_parameter", "source": "src5082.java.ExceptionPassthroughInputStream.read()", "target": "src5082.java.ExceptionPassthroughInputStream.read().byteCount"}, {"type": "has_parameter", "source": "src5082.java.ExceptionPassthroughInputStream.skip()", "target": "src5082.java.ExceptionPassthroughInputStream.skip().byteCount"}]}