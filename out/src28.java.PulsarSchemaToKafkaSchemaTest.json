{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "class", "name": "PulsarSchemaToKafkaSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest"}, {"attr": {"type": "method", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.useOptionalPrimitives()"}, {"attr": {"type": "method", "name": "bytesSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.bytesSchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.bytesSchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "stringSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.stringSchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.stringSchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "booleanSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.booleanSchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.booleanSchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "int8SchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.int8SchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.int8SchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "int16SchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.int16SchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.int16SchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "int32SchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.int32SchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.int32SchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "int64SchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.int64SchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.int64SchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "float32SchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.float32SchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.float32SchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "float64SchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.float64SchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.float64SchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "kvBytesSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.kvBytesSchemaTest()"}, {"attr": {"type": "parameter", "name": "useOptionalPrimitives", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.kvBytesSchemaTest().useOptionalPrimitives"}, {"attr": {"type": "method", "name": "kvBytesIntSchemaTests", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.kvBytesIntSchemaTests()"}, {"attr": {"type": "method", "name": "avroSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.avroSchemaTest()"}, {"attr": {"type": "method", "name": "avroComplexSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.avroComplexSchemaTest()"}, {"attr": {"type": "method", "name": "jsonSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.jsonSchemaTest()"}, {"attr": {"type": "method", "name": "jsonComplexSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.jsonComplexSchemaTest()"}, {"attr": {"type": "method", "name": "castToKafkaSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.castToKafkaSchemaTest()"}, {"attr": {"type": "method", "name": "dateSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.dateSchemaTest()"}, {"attr": {"type": "method", "name": "timeSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.timeSchemaTest()"}, {"attr": {"type": "method", "name": "timestampSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.timestampSchemaTest()"}, {"attr": {"type": "method", "name": "instantSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.instantSchemaTest()"}, {"attr": {"type": "method", "name": "localDateSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.localDateSchemaTest()"}, {"attr": {"type": "method", "name": "localTimeSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.localTimeSchemaTest()"}, {"attr": {"type": "method", "name": "localDatetimeSchemaTest", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.localDatetimeSchemaTest()"}, {"attr": {"type": "field", "name": "STRUCT_FIELDS", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.STRUCT_FIELDS"}, {"attr": {"type": "field", "name": "COMPLEX_STRUCT_FIELDS", "nullable": false}, "id": "src28.java.PulsarSchemaToKafkaSchemaTest.COMPLEX_STRUCT_FIELDS"}], "links": [{"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.useOptionalPrimitives()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.bytesSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.stringSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.booleanSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.int8SchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.int16SchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.int32SchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.int64SchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.float32SchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.float64SchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.kvBytesSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.kvBytesIntSchemaTests()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.avroSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.avroComplexSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.jsonSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.jsonComplexSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.castToKafkaSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.dateSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.timeSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.timestampSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.instantSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.localDateSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.localTimeSchemaTest()"}, {"type": "contains", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.localDatetimeSchemaTest()"}, {"type": "has_field", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.STRUCT_FIELDS"}, {"type": "has_field", "source": "src28.java.PulsarSchemaToKafkaSchemaTest", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.COMPLEX_STRUCT_FIELDS"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.bytesSchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.bytesSchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.stringSchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.stringSchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.booleanSchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.booleanSchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.int8SchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.int8SchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.int16SchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.int16SchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.int32SchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.int32SchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.int64SchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.int64SchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.float32SchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.float32SchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.float64SchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.float64SchemaTest().useOptionalPrimitives"}, {"type": "has_parameter", "source": "src28.java.PulsarSchemaToKafkaSchemaTest.kvBytesSchemaTest()", "target": "src28.java.PulsarSchemaToKafkaSchemaTest.kvBytesSchemaTest().useOptionalPrimitives"}]}