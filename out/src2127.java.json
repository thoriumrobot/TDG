{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"attr": {"type": "file", "name": "src2127.java", "line_number": null, "nullable": false, "actual_type": null}, "id": "src2127.java"}, {"attr": {"type": "class", "name": "ConnectionStringTest", "line_number": 41, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest"}, {"attr": {"type": "method", "name": "throwsIfNoAddress", "line_number": 44, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.throwsIfNoAddress()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 44, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.throwsIfNoAddress().return"}, {"attr": {"type": "method", "name": "assertComplainsAboutMissingAddress", "line_number": 50, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 50, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress().return"}, {"attr": {"type": "parameter", "name": "connectionString", "line_number": 50, "nullable": false, "actual_type": "String"}, "id": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress().connectionString"}, {"attr": {"type": "method", "name": "canFormat", "line_number": 57, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canFormat()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 57, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canFormat().return"}, {"attr": {"type": "method", "name": "isImmutable", "line_number": 68, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.isImmutable()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 68, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.isImmutable().return"}, {"attr": {"type": "method", "name": "withers", "line_number": 76, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.withers()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 76, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.withers().return"}, {"attr": {"type": "method", "name": "canParseUnresolvedSocket", "line_number": 87, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 87, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket().return"}, {"attr": {"type": "method", "name": "assertParsedUnresolvedSocketMatches", "line_number": 107, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 107, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().return"}, {"attr": {"type": "parameter", "name": "s", "line_number": 107, "nullable": false, "actual_type": "String"}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().s"}, {"attr": {"type": "parameter", "name": "expectedHost", "line_number": 107, "nullable": false, "actual_type": "String"}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedHost"}, {"attr": {"type": "parameter", "name": "expectedPort", "line_number": 107, "nullable": false, "actual_type": "int"}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPort"}, {"attr": {"type": "parameter", "name": "expectedPortType", "line_number": 107, "nullable": true, "actual_type": "ConnectionString"}, "id": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPortType"}, {"attr": {"type": "method", "name": "shouldParseValidSchemes", "line_number": 115, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldParseValidSchemes()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 115, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldParseValidSchemes().return"}, {"attr": {"type": "method", "name": "shouldFailOnInvalidScheme", "line_number": 126, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 126, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme().return"}, {"attr": {"type": "method", "name": "shouldParseHostList", "line_number": 131, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldParseHostList()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 131, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldParseHostList().return"}, {"attr": {"type": "method", "name": "shouldParseParams", "line_number": 172, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldParseParams()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 172, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldParseParams().return"}, {"attr": {"type": "method", "name": "trailingParamDelimiterIsOkay", "line_number": 190, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 190, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay().return"}, {"attr": {"type": "method", "name": "shouldParseUsername", "line_number": 199, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldParseUsername()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 199, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldParseUsername().return"}, {"attr": {"type": "method", "name": "shouldAcceptSingleIPv6WithoutPort", "line_number": 219, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 219, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort().return"}, {"attr": {"type": "method", "name": "shouldAcceptMultipleIPv6WithoutPort", "line_number": 236, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 236, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort().return"}, {"attr": {"type": "method", "name": "shouldAcceptSingleIPv6WithPort", "line_number": 254, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 254, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort().return"}, {"attr": {"type": "method", "name": "shouldAcceptIpv4WithLcbPortType", "line_number": 266, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 266, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType().return"}, {"attr": {"type": "method", "name": "shouldAcceptIpv4WithNewPortType", "line_number": 280, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 280, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType().return"}, {"attr": {"type": "method", "name": "shouldAcceptIPv6WithPortType", "line_number": 294, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 294, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType().return"}, {"attr": {"type": "method", "name": "isValidDnsSrv", "line_number": 311, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.isValidDnsSrv()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 311, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.isValidDnsSrv().return"}, {"attr": {"type": "method", "name": "gracefullyHandlesInvalidScheme", "line_number": 320, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 320, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme().return"}, {"attr": {"type": "method", "name": "acceptsMixedCaseSchemes", "line_number": 326, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 326, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes().return"}, {"attr": {"type": "method", "name": "canCreateFromSeedNodes", "line_number": 333, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 333, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes().return"}, {"attr": {"type": "method", "name": "rejectsIncompatiblePortTypes", "line_number": 348, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 348, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes().return"}, {"attr": {"type": "method", "name": "rejectsIncompatibleSeedNodePortTypes", "line_number": 355, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 355, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes().return"}, {"attr": {"type": "method", "name": "infersProtostellarScheme", "line_number": 365, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.infersProtostellarScheme()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 365, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.infersProtostellarScheme().return"}, {"attr": {"type": "method", "name": "canBuildFromIpv6SeedNode", "line_number": 375, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 375, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode().return"}, {"attr": {"type": "method", "name": "canIdentifyCapella", "line_number": 385, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canIdentifyCapella()"}, {"attr": {"type": "return", "name": "return_value", "line_number": 385, "nullable": false, "actual_type": null}, "id": "src2127.java.ConnectionStringTest.canIdentifyCapella().return"}, {"attr": {"type": "method", "name": "throwsIfNoAddress", "line_number": 44, "nullable": false, "actual_type": null}, "id": "src2127.java.throwsIfNoAddress()"}, {"attr": {"type": "literal", "name": "null", "line_number": 45, "nullable": false, "actual_type": null}, "id": "src2127.java.null_45_76"}, {"id": "src2127.java.create"}, {"attr": {"type": "method", "name": "assertComplainsAboutMissingAddress", "line_number": 50, "nullable": false, "actual_type": null}, "id": "src2127.java.assertComplainsAboutMissingAddress()"}, {"attr": {"type": "parameter", "name": "connectionString", "line_number": 50, "nullable": false, "actual_type": "String"}, "id": "src2127.java.assertComplainsAboutMissingAddress().connectionString"}, {"attr": {"type": "variable", "name": "expected", "line_number": null, "nullable": false, "actual_type": null}, "id": "src2127.java.expected"}, {"attr": {"type": "variable", "name": "e", "line_number": null, "nullable": false, "actual_type": null}, "id": "src2127.java.e"}, {"attr": {"type": "method", "name": "canFormat", "line_number": 57, "nullable": false, "actual_type": null}, "id": "src2127.java.canFormat()"}, {"attr": {"type": "variable", "name": "original", "line_number": null, "nullable": false, "actual_type": null}, "id": "src2127.java.original"}, {"attr": {"type": "variable", "name": "parsed", "line_number": null, "nullable": false, "actual_type": null}, "id": "src2127.java.parsed"}, {"attr": {"type": "method", "name": "isImmutable", "line_number": 68, "nullable": false, "actual_type": null}, "id": "src2127.java.isImmutable()"}, {"attr": {"type": "variable", "name": "cs", "line_number": null, "nullable": false, "actual_type": null}, "id": "src2127.java.cs"}, {"attr": {"type": "method", "name": "withers", "line_number": 76, "nullable": false, "actual_type": null}, "id": "src2127.java.withers()"}, {"attr": {"type": "method", "name": "canParseUnresolvedSocket", "line_number": 87, "nullable": false, "actual_type": null}, "id": "src2127.java.canParseUnresolvedSocket()"}, {"attr": {"type": "literal", "name": "null", "line_number": 88, "nullable": false, "actual_type": null}, "id": "src2127.java.null_88_58"}, {"id": "src2127.java.assertParsedUnresolvedSocketMatches"}, {"attr": {"type": "literal", "name": "null", "line_number": 89, "nullable": false, "actual_type": null}, "id": "src2127.java.null_89_64"}, {"attr": {"type": "literal", "name": "null", "line_number": 93, "nullable": false, "actual_type": null}, "id": "src2127.java.null_93_72"}, {"attr": {"type": "literal", "name": "null", "line_number": 94, "nullable": false, "actual_type": null}, "id": "src2127.java.null_94_78"}, {"attr": {"type": "method", "name": "assertParsedUnresolvedSocketMatches", "line_number": 107, "nullable": false, "actual_type": null}, "id": "src2127.java.assertParsedUnresolvedSocketMatches()"}, {"attr": {"type": "parameter", "name": "s", "line_number": 107, "nullable": false, "actual_type": "String"}, "id": "src2127.java.assertParsedUnresolvedSocketMatches().s"}, {"attr": {"type": "parameter", "name": "expectedHost", "line_number": 107, "nullable": false, "actual_type": "String"}, "id": "src2127.java.assertParsedUnresolvedSocketMatches().expectedHost"}, {"attr": {"type": "parameter", "name": "expectedPort", "line_number": 107, "nullable": false, "actual_type": "int"}, "id": "src2127.java.assertParsedUnresolvedSocketMatches().expectedPort"}, {"attr": {"type": "parameter", "name": "expectedPortType", "line_number": 107, "nullable": true, "actual_type": "ConnectionString"}, "id": "src2127.java.assertParsedUnresolvedSocketMatches().expectedPortType"}, {"attr": {"type": "method", "name": "shouldParseValidSchemes", "line_number": 115, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldParseValidSchemes()"}, {"attr": {"type": "method", "name": "shouldFailOnInvalidScheme", "line_number": 126, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldFailOnInvalidScheme()"}, {"attr": {"type": "method", "name": "shouldParseHostList", "line_number": 131, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldParseHostList()"}, {"attr": {"type": "method", "name": "shouldParseParams", "line_number": 172, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldParseParams()"}, {"attr": {"type": "method", "name": "trailingParamDelimiterIsOkay", "line_number": 190, "nullable": false, "actual_type": null}, "id": "src2127.java.trailingParamDelimiterIsOkay()"}, {"attr": {"type": "method", "name": "shouldParseUsername", "line_number": 199, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldParseUsername()"}, {"attr": {"type": "method", "name": "shouldAcceptSingleIPv6WithoutPort", "line_number": 219, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldAcceptSingleIPv6WithoutPort()"}, {"attr": {"type": "method", "name": "shouldAcceptMultipleIPv6WithoutPort", "line_number": 236, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldAcceptMultipleIPv6WithoutPort()"}, {"attr": {"type": "method", "name": "shouldAcceptSingleIPv6WithPort", "line_number": 254, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldAcceptSingleIPv6WithPort()"}, {"attr": {"type": "method", "name": "shouldAcceptIpv4WithLcbPortType", "line_number": 266, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldAcceptIpv4WithLcbPortType()"}, {"attr": {"type": "method", "name": "shouldAcceptIpv4WithNewPortType", "line_number": 280, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldAcceptIpv4WithNewPortType()"}, {"attr": {"type": "method", "name": "shouldAcceptIPv6WithPortType", "line_number": 294, "nullable": false, "actual_type": null}, "id": "src2127.java.shouldAcceptIPv6WithPortType()"}, {"attr": {"type": "method", "name": "isValidDnsSrv", "line_number": 311, "nullable": false, "actual_type": null}, "id": "src2127.java.isValidDnsSrv()"}, {"attr": {"type": "method", "name": "gracefullyHandlesInvalidScheme", "line_number": 320, "nullable": false, "actual_type": null}, "id": "src2127.java.gracefullyHandlesInvalidScheme()"}, {"attr": {"type": "method", "name": "acceptsMixedCaseSchemes", "line_number": 326, "nullable": false, "actual_type": null}, "id": "src2127.java.acceptsMixedCaseSchemes()"}, {"attr": {"type": "method", "name": "canCreateFromSeedNodes", "line_number": 333, "nullable": false, "actual_type": null}, "id": "src2127.java.canCreateFromSeedNodes()"}, {"attr": {"type": "variable", "name": "connectionString", "line_number": null, "nullable": false, "actual_type": null}, "id": "src2127.java.connectionString"}, {"attr": {"type": "method", "name": "rejectsIncompatiblePortTypes", "line_number": 348, "nullable": false, "actual_type": null}, "id": "src2127.java.rejectsIncompatiblePortTypes()"}, {"attr": {"type": "method", "name": "rejectsIncompatibleSeedNodePortTypes", "line_number": 355, "nullable": false, "actual_type": null}, "id": "src2127.java.rejectsIncompatibleSeedNodePortTypes()"}, {"attr": {"type": "method", "name": "infersProtostellarScheme", "line_number": 365, "nullable": false, "actual_type": null}, "id": "src2127.java.infersProtostellarScheme()"}, {"attr": {"type": "method", "name": "canBuildFromIpv6SeedNode", "line_number": 375, "nullable": false, "actual_type": null}, "id": "src2127.java.canBuildFromIpv6SeedNode()"}, {"attr": {"type": "method", "name": "canIdentifyCapella", "line_number": 385, "nullable": false, "actual_type": null}, "id": "src2127.java.canIdentifyCapella()"}], "links": [{"type": "contains", "source": "src2127.java", "target": "src2127.java.ConnectionStringTest"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.throwsIfNoAddress()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canFormat()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.isImmutable()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.withers()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldParseValidSchemes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldParseHostList()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldParseParams()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldParseUsername()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.isValidDnsSrv()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.infersProtostellarScheme()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode()"}, {"type": "contains", "source": "src2127.java.ConnectionStringTest", "target": "src2127.java.ConnectionStringTest.canIdentifyCapella()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.throwsIfNoAddress()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.throwsIfNoAddress()", "target": "src2127.java.ConnectionStringTest.throwsIfNoAddress().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.throwsIfNoAddress().return", "target": "src2127.java.ConnectionStringTest.throwsIfNoAddress()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()", "target": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress().return"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()", "target": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress().connectionString"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress().return", "target": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()"}, {"type": "reverse_has_parameter", "source": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress().connectionString", "target": "src2127.java.ConnectionStringTest.assertComplainsAboutMissingAddress()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.canFormat()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.canFormat()", "target": "src2127.java.ConnectionStringTest.canFormat().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.canFormat().return", "target": "src2127.java.ConnectionStringTest.canFormat()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.isImmutable()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.isImmutable()", "target": "src2127.java.ConnectionStringTest.isImmutable().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.isImmutable().return", "target": "src2127.java.ConnectionStringTest.isImmutable()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.withers()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.withers()", "target": "src2127.java.ConnectionStringTest.withers().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.withers().return", "target": "src2127.java.ConnectionStringTest.withers()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket()", "target": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket().return", "target": "src2127.java.ConnectionStringTest.canParseUnresolvedSocket()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().return"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().s"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedHost"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPort"}, {"type": "has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPortType"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().return", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"type": "reverse_has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().s", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"type": "reverse_has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedHost", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"type": "reverse_has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPort", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"type": "reverse_has_parameter", "source": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches().expectedPortType", "target": "src2127.java.ConnectionStringTest.assertParsedUnresolvedSocketMatches()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldParseValidSchemes()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldParseValidSchemes()", "target": "src2127.java.ConnectionStringTest.shouldParseValidSchemes().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldParseValidSchemes().return", "target": "src2127.java.ConnectionStringTest.shouldParseValidSchemes()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme()", "target": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme().return", "target": "src2127.java.ConnectionStringTest.shouldFailOnInvalidScheme()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldParseHostList()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldParseHostList()", "target": "src2127.java.ConnectionStringTest.shouldParseHostList().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldParseHostList().return", "target": "src2127.java.ConnectionStringTest.shouldParseHostList()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldParseParams()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldParseParams()", "target": "src2127.java.ConnectionStringTest.shouldParseParams().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldParseParams().return", "target": "src2127.java.ConnectionStringTest.shouldParseParams()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay()", "target": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay().return", "target": "src2127.java.ConnectionStringTest.trailingParamDelimiterIsOkay()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldParseUsername()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldParseUsername()", "target": "src2127.java.ConnectionStringTest.shouldParseUsername().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldParseUsername().return", "target": "src2127.java.ConnectionStringTest.shouldParseUsername()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort()", "target": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort().return", "target": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithoutPort()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort()", "target": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort().return", "target": "src2127.java.ConnectionStringTest.shouldAcceptMultipleIPv6WithoutPort()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort()", "target": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort().return", "target": "src2127.java.ConnectionStringTest.shouldAcceptSingleIPv6WithPort()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType()", "target": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType().return", "target": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithLcbPortType()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType()", "target": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType().return", "target": "src2127.java.ConnectionStringTest.shouldAcceptIpv4WithNewPortType()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType()", "target": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType().return", "target": "src2127.java.ConnectionStringTest.shouldAcceptIPv6WithPortType()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.isValidDnsSrv()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.isValidDnsSrv()", "target": "src2127.java.ConnectionStringTest.isValidDnsSrv().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.isValidDnsSrv().return", "target": "src2127.java.ConnectionStringTest.isValidDnsSrv()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme()", "target": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme().return", "target": "src2127.java.ConnectionStringTest.gracefullyHandlesInvalidScheme()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes()", "target": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes().return", "target": "src2127.java.ConnectionStringTest.acceptsMixedCaseSchemes()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes()", "target": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes().return", "target": "src2127.java.ConnectionStringTest.canCreateFromSeedNodes()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes()", "target": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes().return", "target": "src2127.java.ConnectionStringTest.rejectsIncompatiblePortTypes()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes()", "target": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes().return", "target": "src2127.java.ConnectionStringTest.rejectsIncompatibleSeedNodePortTypes()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.infersProtostellarScheme()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.infersProtostellarScheme()", "target": "src2127.java.ConnectionStringTest.infersProtostellarScheme().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.infersProtostellarScheme().return", "target": "src2127.java.ConnectionStringTest.infersProtostellarScheme()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode()", "target": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode().return", "target": "src2127.java.ConnectionStringTest.canBuildFromIpv6SeedNode()"}, {"type": "reverse_contains", "source": "src2127.java.ConnectionStringTest.canIdentifyCapella()", "target": "src2127.java.ConnectionStringTest"}, {"type": "has_return", "source": "src2127.java.ConnectionStringTest.canIdentifyCapella()", "target": "src2127.java.ConnectionStringTest.canIdentifyCapella().return"}, {"type": "reverse_has_return", "source": "src2127.java.ConnectionStringTest.canIdentifyCapella().return", "target": "src2127.java.ConnectionStringTest.canIdentifyCapella()"}, {"type": "reverse_contains", "source": "src2127.java.null_45_76", "target": "src2127.java.create"}, {"type": "contains", "source": "src2127.java.create", "target": "src2127.java.null_45_76"}, {"type": "has_parameter", "source": "src2127.java.assertComplainsAboutMissingAddress()", "target": "src2127.java.assertComplainsAboutMissingAddress().connectionString"}, {"type": "reverse_has_parameter", "source": "src2127.java.assertComplainsAboutMissingAddress().connectionString", "target": "src2127.java.assertComplainsAboutMissingAddress()"}, {"type": "reverse_contains", "source": "src2127.java.null_88_58", "target": "src2127.java.assertParsedUnresolvedSocketMatches"}, {"type": "contains", "source": "src2127.java.assertParsedUnresolvedSocketMatches", "target": "src2127.java.null_88_58"}, {"type": "contains", "source": "src2127.java.assertParsedUnresolvedSocketMatches", "target": "src2127.java.null_89_64"}, {"type": "contains", "source": "src2127.java.assertParsedUnresolvedSocketMatches", "target": "src2127.java.null_93_72"}, {"type": "contains", "source": "src2127.java.assertParsedUnresolvedSocketMatches", "target": "src2127.java.null_94_78"}, {"type": "reverse_contains", "source": "src2127.java.null_89_64", "target": "src2127.java.assertParsedUnresolvedSocketMatches"}, {"type": "reverse_contains", "source": "src2127.java.null_93_72", "target": "src2127.java.assertParsedUnresolvedSocketMatches"}, {"type": "reverse_contains", "source": "src2127.java.null_94_78", "target": "src2127.java.assertParsedUnresolvedSocketMatches"}, {"type": "has_parameter", "source": "src2127.java.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.assertParsedUnresolvedSocketMatches().s"}, {"type": "has_parameter", "source": "src2127.java.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.assertParsedUnresolvedSocketMatches().expectedHost"}, {"type": "has_parameter", "source": "src2127.java.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.assertParsedUnresolvedSocketMatches().expectedPort"}, {"type": "has_parameter", "source": "src2127.java.assertParsedUnresolvedSocketMatches()", "target": "src2127.java.assertParsedUnresolvedSocketMatches().expectedPortType"}, {"type": "reverse_has_parameter", "source": "src2127.java.assertParsedUnresolvedSocketMatches().s", "target": "src2127.java.assertParsedUnresolvedSocketMatches()"}, {"type": "reverse_has_parameter", "source": "src2127.java.assertParsedUnresolvedSocketMatches().expectedHost", "target": "src2127.java.assertParsedUnresolvedSocketMatches()"}, {"type": "reverse_has_parameter", "source": "src2127.java.assertParsedUnresolvedSocketMatches().expectedPort", "target": "src2127.java.assertParsedUnresolvedSocketMatches()"}, {"type": "reverse_has_parameter", "source": "src2127.java.assertParsedUnresolvedSocketMatches().expectedPortType", "target": "src2127.java.assertParsedUnresolvedSocketMatches()"}]}